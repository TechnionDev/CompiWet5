declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
@.zerodiverrorstring  = constant [23 x i8] c"Error division by zero\00"

define void @printi(i32) {
%spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
ret void
}

define void @print(i8*) {
%spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
ret void
}

define void @checkDiv(i32) {
%divcmp = icmp eq i32 %0, 0
br i1 %divcmp, label %EqualZero, label %notEqualZero
EqualZero:
%div_error_str = getelementptr [23 x i8], [23 x i8]* @.zerodiverrorstring, i32 0, i32 0
call void @print(i8* %div_error_str)
call void @exit(i32 -1)
ret void
notEqualZero:
ret void
}

@.w0 = constant [2 x i8]c"*\00"
@.w1 = constant [2 x i8]c"*\00"
define i32 @fib(i32) {
%s0 = alloca i32, i32 0
%s1 = alloca i32, i32 0
%s2 = alloca i32, i32 0
%s3 = alloca i32, i32 0
%s4 = alloca i32, i32 0
%s5 = alloca i32, i32 0
%s6 = alloca i32, i32 0
%s7 = alloca i32, i32 0
%s8 = alloca i32, i32 0
%s9 = alloca i32, i32 0
%s10 = alloca i32, i32 0
%s11 = alloca i32, i32 0
%s12 = alloca i32, i32 0
%s13 = alloca i32, i32 0
%s14 = alloca i32, i32 0
%s15 = alloca i32, i32 0
%s16 = alloca i32, i32 0
%s17 = alloca i32, i32 0
%s18 = alloca i32, i32 0
%s19 = alloca i32, i32 0
%s20 = alloca i32, i32 0
%s21 = alloca i32, i32 0
%s22 = alloca i32, i32 0
%s23 = alloca i32, i32 0
%s24 = alloca i32, i32 0
%s25 = alloca i32, i32 0
%s26 = alloca i32, i32 0
%s27 = alloca i32, i32 0
%s28 = alloca i32, i32 0
%s29 = alloca i32, i32 0
%s30 = alloca i32, i32 0
%s31 = alloca i32, i32 0
%s32 = alloca i32, i32 0
%s33 = alloca i32, i32 0
%s34 = alloca i32, i32 0
%s35 = alloca i32, i32 0
%s36 = alloca i32, i32 0
%s37 = alloca i32, i32 0
%s38 = alloca i32, i32 0
%s39 = alloca i32, i32 0
%s40 = alloca i32, i32 0
%s41 = alloca i32, i32 0
%s42 = alloca i32, i32 0
%s43 = alloca i32, i32 0
%s44 = alloca i32, i32 0
%s45 = alloca i32, i32 0
%s46 = alloca i32, i32 0
%s47 = alloca i32, i32 0
%s48 = alloca i32, i32 0
%s49 = alloca i32, i32 0
%t_1 = icmp eq i32 %0, 0
%t_2 = zext i1 %t_1 to i32
br label %label_56
label_53:
%t_3 = icmp eq i32 %0, 1
%t_4 = zext i1 %t_3 to i32
br label %label_60
label_56:
%t_5 = icmp ne i32 %t_2, 0
br i1 %t_5, label %label_63, label %label_53
br label %label_60
label_60:
%t_6 = icmp ne i32 %t_4, 0
%t_7 = zext i1 %t_6 to i32
br label %label_63
label_63:
%t_8 = phi i32 [1, %label_56], [%t_7, %label_60]
%t_9 = icmp ne i32 0, %t_8
br i1 %t_9, label %label_67, label %label_70
label_67:
ret i32 1
br label %label_70
label_70:
%t_10 = sub i32 %0, 1
%t_11 = trunc i32 %t_10 to i8
%t_12 = zext i8 %t_11 to i32
%t_13 = call i32 @fib(i32 %t_12)
%t_14 = sub i32 %0, 2
%t_15 = trunc i32 %t_14 to i8
%t_16 = zext i8 %t_15 to i32
%t_17 = call i32 @fib(i32 %t_16)
%t_18 = add i32 %t_13, %t_17

ret i32 %t_18
ret i32 0
}

define void @main() {
%s0 = alloca i32, i32 0
%s1 = alloca i32, i32 0
%s2 = alloca i32, i32 0
%s3 = alloca i32, i32 0
%s4 = alloca i32, i32 0
%s5 = alloca i32, i32 0
%s6 = alloca i32, i32 0
%s7 = alloca i32, i32 0
%s8 = alloca i32, i32 0
%s9 = alloca i32, i32 0
%s10 = alloca i32, i32 0
%s11 = alloca i32, i32 0
%s12 = alloca i32, i32 0
%s13 = alloca i32, i32 0
%s14 = alloca i32, i32 0
%s15 = alloca i32, i32 0
%s16 = alloca i32, i32 0
%s17 = alloca i32, i32 0
%s18 = alloca i32, i32 0
%s19 = alloca i32, i32 0
%s20 = alloca i32, i32 0
%s21 = alloca i32, i32 0
%s22 = alloca i32, i32 0
%s23 = alloca i32, i32 0
%s24 = alloca i32, i32 0
%s25 = alloca i32, i32 0
%s26 = alloca i32, i32 0
%s27 = alloca i32, i32 0
%s28 = alloca i32, i32 0
%s29 = alloca i32, i32 0
%s30 = alloca i32, i32 0
%s31 = alloca i32, i32 0
%s32 = alloca i32, i32 0
%s33 = alloca i32, i32 0
%s34 = alloca i32, i32 0
%s35 = alloca i32, i32 0
%s36 = alloca i32, i32 0
%s37 = alloca i32, i32 0
%s38 = alloca i32, i32 0
%s39 = alloca i32, i32 0
%s40 = alloca i32, i32 0
%s41 = alloca i32, i32 0
%s42 = alloca i32, i32 0
%s43 = alloca i32, i32 0
%s44 = alloca i32, i32 0
%s45 = alloca i32, i32 0
%s46 = alloca i32, i32 0
%s47 = alloca i32, i32 0
%s48 = alloca i32, i32 0
%s49 = alloca i32, i32 0
%t_19 = trunc i32 0 to i8
%t_20 = zext i8 %t_19 to i32
store i32 %t_20, i32* %s0
br label %label_133
label_133:
%t_21 = load i32, i32* %s0
%t_22 = icmp slt i32 %t_21, 10
%t_23 = zext i1 %t_22 to i32
%t_24 = trunc i32 %t_23 to i1
br i1 %t_24, label %label_137, label %label_155
label_137:
%t_25 = load i32, i32* %s0
%t_26 = call i32 @fib(i32 %t_25)
call void @printi(i32 %t_26)
%t_27 = load i32, i32* %s0
%t_28 = add i32 %t_27, 1

%t_29 = icmp slt i32 %t_28, 10
%t_30 = zext i1 %t_29 to i32
%t_31 = icmp ne i32 0, %t_30
br i1 %t_31, label %label_146, label %label_149
label_146:
%w0 = getelementptr [2 x i8], [2 x i8]* @.w0, i32 0, i32 0
call void @print(i8* %w0)
br label %label_149
label_149:
%t_32 = load i32, i32* %s0
%t_33 = add i32 %t_32, 1
%t_34 = trunc i32 %t_33 to i8
%t_35 = zext i8 %t_34 to i32
%t_36 = trunc i32 %t_35 to i8
%t_37 = zext i8 %t_36 to i32
store i32 %t_37, i32* %s0
br label %label_133
label_155:
%w1 = getelementptr [2 x i8], [2 x i8]* @.w1, i32 0, i32 0
call void @print(i8* %w1)
ret void
}

