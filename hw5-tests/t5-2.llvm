==num b==
==func decl==
==call==
==call EXP==
==id==
==mult==
hiiiiiiiiiiiiii
==id==
==mult==
hiiiiiiiiiiiiii
==id==
==id==
==mult==
hiiiiiiiiiiiiii
==plus==
hiiiiiiiiiiiiii
==id==
==id==
==mult==
hiiiiiiiiiiiiii
==id==
==mult==
hiiiiiiiiiiiiii
==plus==
hiiiiiiiiiiiiii
==id==
==id==
==mult==
hiiiiiiiiiiiiii
==id==
==mult==
hiiiiiiiiiiiiii
==id==
==div==
hiiiiiiiiiiiiii
==minus==
hiiiiiiiiiiiiii
==id==
==plus==
hiiiiiiiiiiiiii
==id==
==id==
==mult==
hiiiiiiiiiiiiii
==id==
==mult==
hiiiiiiiiiiiiii
==plus==
hiiiiiiiiiiiiii
==id==
==minus==
hiiiiiiiiiiiiii
==func decl==
==num==
==num==
==num==
==mult==
hiiiiiiiiiiiiii
==num==
==div==
hiiiiiiiiiiiiii
==plus==
hiiiiiiiiiiiiii
==num==
==minus==
hiiiiiiiiiiiiii
++++++++++
==num b==
==num==
==mult==
hiiiiiiiiiiiiii
==num==
==plus==
hiiiiiiiiiiiiii
++++++++++
==num==
==num==
==num==
==num==
==num==
==num==
==num==
+++++%t_24+++++
==call==
==call EXP==
++++++++++
==num==
==call==
==call EXP==
==div==
hiiiiiiiiiiiiii
==string==
++++++++++
==func decl==
==end of program==
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
@.zerodiverrorstring  = constant [23 x i8] c"Error division by zero\00"

define void @printi(i32) {
%spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
ret void
}

define void @print(i8*) {
%spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
ret void
}

define void @checkDiv(i32) {
%divcmp = icmp eq i32 %0, 0
br i1 %divcmp, label %EqualZero, label %notEqualZero
EqualZero:
%div_error_str = getelementptr [23 x i8], [23 x i8]* @.zerodiverrorstring, i32 0, i32 0
call void @print(i8* %div_error_str)
call void @exit(i32 -1)
ret void
notEqualZero:
ret void
}

@.w0 = constant [23 x i8]c"this should not happen\00"
define i32 @zero() {
%s0 = alloca i32, i32 0
%s1 = alloca i32, i32 0
%s2 = alloca i32, i32 0
%s3 = alloca i32, i32 0
%s4 = alloca i32, i32 0
%s5 = alloca i32, i32 0
%s6 = alloca i32, i32 0
%s7 = alloca i32, i32 0
%s8 = alloca i32, i32 0
%s9 = alloca i32, i32 0
%s10 = alloca i32, i32 0
%s11 = alloca i32, i32 0
%s12 = alloca i32, i32 0
%s13 = alloca i32, i32 0
%s14 = alloca i32, i32 0
%s15 = alloca i32, i32 0
%s16 = alloca i32, i32 0
%s17 = alloca i32, i32 0
%s18 = alloca i32, i32 0
%s19 = alloca i32, i32 0
%s20 = alloca i32, i32 0
%s21 = alloca i32, i32 0
%s22 = alloca i32, i32 0
%s23 = alloca i32, i32 0
%s24 = alloca i32, i32 0
%s25 = alloca i32, i32 0
%s26 = alloca i32, i32 0
%s27 = alloca i32, i32 0
%s28 = alloca i32, i32 0
%s29 = alloca i32, i32 0
%s30 = alloca i32, i32 0
%s31 = alloca i32, i32 0
%s32 = alloca i32, i32 0
%s33 = alloca i32, i32 0
%s34 = alloca i32, i32 0
%s35 = alloca i32, i32 0
%s36 = alloca i32, i32 0
%s37 = alloca i32, i32 0
%s38 = alloca i32, i32 0
%s39 = alloca i32, i32 0
%s40 = alloca i32, i32 0
%s41 = alloca i32, i32 0
%s42 = alloca i32, i32 0
%s43 = alloca i32, i32 0
%s44 = alloca i32, i32 0
%s45 = alloca i32, i32 0
%s46 = alloca i32, i32 0
%s47 = alloca i32, i32 0
%s48 = alloca i32, i32 0
%s49 = alloca i32, i32 0
ret i32 0
ret i32 0
}

define i32 @willThisNeedManyRegisters(i32, i32, i32, i32, i32, i32, i32) {
%s0 = alloca i32, i32 0
%s1 = alloca i32, i32 0
%s2 = alloca i32, i32 0
%s3 = alloca i32, i32 0
%s4 = alloca i32, i32 0
%s5 = alloca i32, i32 0
%s6 = alloca i32, i32 0
%s7 = alloca i32, i32 0
%s8 = alloca i32, i32 0
%s9 = alloca i32, i32 0
%s10 = alloca i32, i32 0
%s11 = alloca i32, i32 0
%s12 = alloca i32, i32 0
%s13 = alloca i32, i32 0
%s14 = alloca i32, i32 0
%s15 = alloca i32, i32 0
%s16 = alloca i32, i32 0
%s17 = alloca i32, i32 0
%s18 = alloca i32, i32 0
%s19 = alloca i32, i32 0
%s20 = alloca i32, i32 0
%s21 = alloca i32, i32 0
%s22 = alloca i32, i32 0
%s23 = alloca i32, i32 0
%s24 = alloca i32, i32 0
%s25 = alloca i32, i32 0
%s26 = alloca i32, i32 0
%s27 = alloca i32, i32 0
%s28 = alloca i32, i32 0
%s29 = alloca i32, i32 0
%s30 = alloca i32, i32 0
%s31 = alloca i32, i32 0
%s32 = alloca i32, i32 0
%s33 = alloca i32, i32 0
%s34 = alloca i32, i32 0
%s35 = alloca i32, i32 0
%s36 = alloca i32, i32 0
%s37 = alloca i32, i32 0
%s38 = alloca i32, i32 0
%s39 = alloca i32, i32 0
%s40 = alloca i32, i32 0
%s41 = alloca i32, i32 0
%s42 = alloca i32, i32 0
%s43 = alloca i32, i32 0
%s44 = alloca i32, i32 0
%s45 = alloca i32, i32 0
%s46 = alloca i32, i32 0
%s47 = alloca i32, i32 0
%s48 = alloca i32, i32 0
%s49 = alloca i32, i32 0
%t_1 = call i32 @zero()
%t_2 = mul i32 %t_1, %0

%t_3 = mul i32 %t_2, %0

%t_4 = mul i32 %0, %0

%t_5 = add i32 %t_3, %t_4

%t_6 = mul i32 %1, %2

%t_7 = mul i32 %t_6, %0

%t_8 = add i32 %t_5, %t_7

%t_9 = mul i32 %3, %1

%t_10 = mul i32 %t_9, %4

call void @checkDiv(i32 %5)
%t_11 = sdiv i32 %t_10, %5

%t_12 = sub i32 %t_8, %t_11

%t_13 = add i32 %t_12, %5

%t_14 = mul i32 %6, %6

%t_15 = mul i32 %t_14, %6

%t_16 = add i32 %t_13, %t_15

%t_17 = sub i32 %t_16, %1

ret i32 %t_17
ret i32 0
}

define void @main() {
%s0 = alloca i32, i32 0
%s1 = alloca i32, i32 0
%s2 = alloca i32, i32 0
%s3 = alloca i32, i32 0
%s4 = alloca i32, i32 0
%s5 = alloca i32, i32 0
%s6 = alloca i32, i32 0
%s7 = alloca i32, i32 0
%s8 = alloca i32, i32 0
%s9 = alloca i32, i32 0
%s10 = alloca i32, i32 0
%s11 = alloca i32, i32 0
%s12 = alloca i32, i32 0
%s13 = alloca i32, i32 0
%s14 = alloca i32, i32 0
%s15 = alloca i32, i32 0
%s16 = alloca i32, i32 0
%s17 = alloca i32, i32 0
%s18 = alloca i32, i32 0
%s19 = alloca i32, i32 0
%s20 = alloca i32, i32 0
%s21 = alloca i32, i32 0
%s22 = alloca i32, i32 0
%s23 = alloca i32, i32 0
%s24 = alloca i32, i32 0
%s25 = alloca i32, i32 0
%s26 = alloca i32, i32 0
%s27 = alloca i32, i32 0
%s28 = alloca i32, i32 0
%s29 = alloca i32, i32 0
%s30 = alloca i32, i32 0
%s31 = alloca i32, i32 0
%s32 = alloca i32, i32 0
%s33 = alloca i32, i32 0
%s34 = alloca i32, i32 0
%s35 = alloca i32, i32 0
%s36 = alloca i32, i32 0
%s37 = alloca i32, i32 0
%s38 = alloca i32, i32 0
%s39 = alloca i32, i32 0
%s40 = alloca i32, i32 0
%s41 = alloca i32, i32 0
%s42 = alloca i32, i32 0
%s43 = alloca i32, i32 0
%s44 = alloca i32, i32 0
%s45 = alloca i32, i32 0
%s46 = alloca i32, i32 0
%s47 = alloca i32, i32 0
%s48 = alloca i32, i32 0
%s49 = alloca i32, i32 0
%t_18 = mul i32 3, 6

call void @checkDiv(i32 4)
%t_19 = sdiv i32 %t_18, 4

%t_20 = add i32 2, %t_19

%t_21 = sub i32 %t_20, 1

call void @printi(i32 %t_21)
%t_22 = mul i32 23, 12

%t_23 = add i32 %t_22, 459

call void @printi(i32 %t_23)
%t_24 = call i32 @willThisNeedManyRegisters(i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6)
call void @printi(i32 %t_24)
%t_25 = call i32 @zero()
call void @checkDiv(i32 %t_25)
%t_26 = sdiv i32 12, %t_25

%t_27 = add i32 %t_26, 0
store i32 %t_27, i32* %s0
%w0 = getelementptr [23 x i8], [23 x i8]* @.w0, i32 0, i32 0
call void @print(i8* %w0)
ret void
}

