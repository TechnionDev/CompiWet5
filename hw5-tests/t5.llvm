declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
@.zerodiverrorstring  = constant [23 x i8] c"Error division by zero\00"

define void @printi(i32) {
%spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
ret void
}

define void @print(i8*) {
%spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
ret void
}

define void @checkDiv(i32) {
%divcmp = icmp eq i32 %0, 0
br i1 %divcmp, label %EqualZero, label %notEqualZero
EqualZero:
%div_error_str = getelementptr [23 x i8], [23 x i8]* @.zerodiverrorstring, i32 0, i32 0
call void @print(i8* %div_error_str)
call void @exit(i32 -1)
ret void
notEqualZero:
ret void
}

@.w0 = constant [5 x i8]c"true\00"
@.w1 = constant [6 x i8]c"false\00"
@.w2 = constant [10 x i8]c"BOOL TEST\00"
define void @printBool(i32) {
%s0 = alloca i32, i32 0
%s1 = alloca i32, i32 0
%s2 = alloca i32, i32 0
%s3 = alloca i32, i32 0
%s4 = alloca i32, i32 0
%s5 = alloca i32, i32 0
%s6 = alloca i32, i32 0
%s7 = alloca i32, i32 0
%s8 = alloca i32, i32 0
%s9 = alloca i32, i32 0
%s10 = alloca i32, i32 0
%s11 = alloca i32, i32 0
%s12 = alloca i32, i32 0
%s13 = alloca i32, i32 0
%s14 = alloca i32, i32 0
%s15 = alloca i32, i32 0
%s16 = alloca i32, i32 0
%s17 = alloca i32, i32 0
%s18 = alloca i32, i32 0
%s19 = alloca i32, i32 0
%s20 = alloca i32, i32 0
%s21 = alloca i32, i32 0
%s22 = alloca i32, i32 0
%s23 = alloca i32, i32 0
%s24 = alloca i32, i32 0
%s25 = alloca i32, i32 0
%s26 = alloca i32, i32 0
%s27 = alloca i32, i32 0
%s28 = alloca i32, i32 0
%s29 = alloca i32, i32 0
%s30 = alloca i32, i32 0
%s31 = alloca i32, i32 0
%s32 = alloca i32, i32 0
%s33 = alloca i32, i32 0
%s34 = alloca i32, i32 0
%s35 = alloca i32, i32 0
%s36 = alloca i32, i32 0
%s37 = alloca i32, i32 0
%s38 = alloca i32, i32 0
%s39 = alloca i32, i32 0
%s40 = alloca i32, i32 0
%s41 = alloca i32, i32 0
%s42 = alloca i32, i32 0
%s43 = alloca i32, i32 0
%s44 = alloca i32, i32 0
%s45 = alloca i32, i32 0
%s46 = alloca i32, i32 0
%s47 = alloca i32, i32 0
%s48 = alloca i32, i32 0
%s49 = alloca i32, i32 0
%t_1 = icmp ne i32 0, %0
br i1 %t_1, label %label_53, label %label_57
label_53:
%w0 = getelementptr [5 x i8], [5 x i8]* @.w0, i32 0, i32 0
call void @print(i8* %w0)
br label %label_60
br label %label_57
label_57:
%w1 = getelementptr [6 x i8], [6 x i8]* @.w1, i32 0, i32 0
call void @print(i8* %w1)
br label %label_60
label_60:
ret void
}

define void @main() {
%s0 = alloca i32, i32 0
%s1 = alloca i32, i32 0
%s2 = alloca i32, i32 0
%s3 = alloca i32, i32 0
%s4 = alloca i32, i32 0
%s5 = alloca i32, i32 0
%s6 = alloca i32, i32 0
%s7 = alloca i32, i32 0
%s8 = alloca i32, i32 0
%s9 = alloca i32, i32 0
%s10 = alloca i32, i32 0
%s11 = alloca i32, i32 0
%s12 = alloca i32, i32 0
%s13 = alloca i32, i32 0
%s14 = alloca i32, i32 0
%s15 = alloca i32, i32 0
%s16 = alloca i32, i32 0
%s17 = alloca i32, i32 0
%s18 = alloca i32, i32 0
%s19 = alloca i32, i32 0
%s20 = alloca i32, i32 0
%s21 = alloca i32, i32 0
%s22 = alloca i32, i32 0
%s23 = alloca i32, i32 0
%s24 = alloca i32, i32 0
%s25 = alloca i32, i32 0
%s26 = alloca i32, i32 0
%s27 = alloca i32, i32 0
%s28 = alloca i32, i32 0
%s29 = alloca i32, i32 0
%s30 = alloca i32, i32 0
%s31 = alloca i32, i32 0
%s32 = alloca i32, i32 0
%s33 = alloca i32, i32 0
%s34 = alloca i32, i32 0
%s35 = alloca i32, i32 0
%s36 = alloca i32, i32 0
%s37 = alloca i32, i32 0
%s38 = alloca i32, i32 0
%s39 = alloca i32, i32 0
%s40 = alloca i32, i32 0
%s41 = alloca i32, i32 0
%s42 = alloca i32, i32 0
%s43 = alloca i32, i32 0
%s44 = alloca i32, i32 0
%s45 = alloca i32, i32 0
%s46 = alloca i32, i32 0
%s47 = alloca i32, i32 0
%s48 = alloca i32, i32 0
%s49 = alloca i32, i32 0
%w2 = getelementptr [10 x i8], [10 x i8]* @.w2, i32 0, i32 0
call void @print(i8* %w2)
%t_2 = add i32 0, 1
store i32 %t_2, i32* %s0
%t_3 = add i32 0, 0
store i32 %t_3, i32* %s1
br label %label_122
label_120:
br label %label_127
label_122:
%t_5 = load i32, i32* %s0
%t_4 = icmp ne i32 %t_5, 0
br i1 %t_4, label %label_131, label %label_120
br label %label_127
label_127:
%t_8 = load i32, i32* %s1
%t_6 = icmp ne i32 %t_8, 0
%t_7 = zext i1 %t_6 to i32
br label %label_131
label_131:
%t_9 = phi i32 [1, %label_122], [%t_7, %label_127]
%t_10 = add i32 0, %t_9
store i32 %t_10, i32* %s2
%t_11 = load i32, i32* %s2
call void @printBool(i32 %t_11)
br label %label_140
label_138:
br label %label_144
label_140:
%t_12 = icmp ne i32 1, 0
br i1 %t_12, label %label_148, label %label_138
br label %label_144
label_144:
%t_15 = load i32, i32* %s1
%t_13 = icmp ne i32 %t_15, 0
%t_14 = zext i1 %t_13 to i32
br label %label_148
label_148:
%t_16 = phi i32 [1, %label_140], [%t_14, %label_144]
%t_17 = add i32 0, %t_16
store i32 %t_17, i32* %s2
%t_18 = load i32, i32* %s2
call void @printBool(i32 %t_18)
br label %label_157
label_155:
br label %label_161
label_157:
%t_19 = icmp ne i32 1, 0
br i1 %t_19, label %label_164, label %label_155
br label %label_161
label_161:
%t_20 = icmp ne i32 0, 0
%t_21 = zext i1 %t_20 to i32
br label %label_164
label_164:
%t_22 = phi i32 [1, %label_157], [%t_21, %label_161]
%t_23 = add i32 0, %t_22
store i32 %t_23, i32* %s2
%t_24 = load i32, i32* %s2
call void @printBool(i32 %t_24)
br label %label_173
label_171:
br label %label_177
label_173:
%t_25 = icmp eq i32 1, 0
br i1 %t_25, label %label_180, label %label_171
br label %label_177
label_177:
%t_26 = icmp ne i32 0, 0
%t_27 = zext i1 %t_26 to i32
br label %label_180
label_180:
%t_28 = phi i32 [0, %label_173], [%t_27, %label_177]
%t_29 = add i32 0, %t_28
store i32 %t_29, i32* %s2
%t_30 = load i32, i32* %s2
call void @printBool(i32 %t_30)
br label %label_189
label_187:
br label %label_193
label_189:
%t_31 = icmp eq i32 0, 0
br i1 %t_31, label %label_196, label %label_187
br label %label_193
label_193:
%t_32 = icmp ne i32 0, 0
%t_33 = zext i1 %t_32 to i32
br label %label_196
label_196:
%t_34 = phi i32 [0, %label_189], [%t_33, %label_193]
%t_35 = add i32 0, %t_34
store i32 %t_35, i32* %s2
%t_36 = load i32, i32* %s2
call void @printBool(i32 %t_36)
br label %label_205
label_203:
br label %label_209
label_205:
%t_37 = icmp ne i32 1, 0
br i1 %t_37, label %label_212, label %label_203
br label %label_209
label_209:
%t_38 = icmp ne i32 1, 0
%t_39 = zext i1 %t_38 to i32
br label %label_212
label_212:
%t_40 = phi i32 [1, %label_205], [%t_39, %label_209]
%t_41 = add i32 0, %t_40
store i32 %t_41, i32* %s2
%t_42 = load i32, i32* %s2
call void @printBool(i32 %t_42)
%t_43 = sub i32 5, 6

%t_44 = sub i32 6, 1

%t_45 = icmp slt i32 %t_43, %t_44
%t_46 = zext i1 %t_45 to i32
%t_47 = add i32 0, %t_46
store i32 %t_47, i32* %s2
%t_48 = load i32, i32* %s2
call void @printBool(i32 %t_48)
%t_49 = sub i32 5, 6

%t_50 = sub i32 6, 1

%t_51 = icmp sgt i32 %t_49, %t_50
%t_52 = zext i1 %t_51 to i32
br label %label_231
label_229:
br label %label_235
label_231:
%t_53 = icmp eq i32 %t_52, 0
br i1 %t_53, label %label_238, label %label_229
br label %label_235
label_235:
%t_54 = icmp ne i32 1, 0
%t_55 = zext i1 %t_54 to i32
br label %label_238
label_238:
%t_56 = phi i32 [0, %label_231], [%t_55, %label_235]
%t_57 = add i32 0, %t_56
store i32 %t_57, i32* %s2
%t_58 = load i32, i32* %s2
call void @printBool(i32 %t_58)
%t_59 = sub i32 1, 0
%t_60 = add i32 0, %t_59
store i32 %t_60, i32* %s2
%t_61 = load i32, i32* %s2
call void @printBool(i32 %t_61)
ret void
ret void
}

