==id==
==id==
==id==
==mult==
hiiiiiiiiiiiiii
==id==
==mult==
hiiiiiiiiiiiiii
==id==
==id==
==mult==
hiiiiiiiiiiiiii
==id==
==mult==
hiiiiiiiiiiiiii
==plus==
hiiiiiiiiiiiiii
==id==
==id==
==mult==
hiiiiiiiiiiiiii
==id==
==mult==
hiiiiiiiiiiiiii
==plus==
hiiiiiiiiiiiiii
==if statement==
==id==
==id==
==plus==
hiiiiiiiiiiiiii
==id==
==plus==
hiiiiiiiiiiiiii
==id==
==mult==
hiiiiiiiiiiiiii
==id==
==id==
==plus==
hiiiiiiiiiiiiii
==id==
==plus==
hiiiiiiiiiiiiii
==num==
==mult==
hiiiiiiiiiiiiii
==plus==
hiiiiiiiiiiiiii
==func decl==
==id==
==id==
==plus==
hiiiiiiiiiiiiii
==num==
==plus==
hiiiiiiiiiiiiii
==func decl==
==num==
==num==
==num==
==num==
==num==
==num==
==num==
==false==
+++++%t_19+++++
==call==
==call EXP==
++++++++++
==num==
==num==
+++++%t_20+++++
==call==
==call EXP==
==num==
==num==
+++++%t_21+++++
==call==
==call EXP==
==num==
==num==
+++++%t_22+++++
==call==
==call EXP==
==num==
==num==
+++++%t_23+++++
==call==
==call EXP==
==num==
==num==
+++++%t_24+++++
==call==
==call EXP==
==num==
==num==
+++++%t_25+++++
==call==
==call EXP==
==num==
==num==
+++++%t_26+++++
==call==
==call EXP==
==false==
+++++%t_27+++++
==call==
==call EXP==
++++++++++
==num==
==num==
==num==
==num==
==num==
==num==
==num==
==true==
+++++%t_28+++++
==call==
==call EXP==
++++++++++
==num==
==num==
+++++%t_29+++++
==call==
==call EXP==
==num==
==num==
+++++%t_30+++++
==call==
==call EXP==
==num==
==num==
+++++%t_31+++++
==call==
==call EXP==
==num==
==num==
+++++%t_32+++++
==call==
==call EXP==
==num==
==num==
+++++%t_33+++++
==call==
==call EXP==
==num==
==num==
+++++%t_34+++++
==call==
==call EXP==
==num==
==num==
+++++%t_35+++++
==call==
==call EXP==
==true==
+++++%t_36+++++
==call==
==call EXP==
++++++++++
==num==
==num==
==num==
==num==
==num==
==num==
==num==
==true==
+++++%t_37+++++
==call==
==call EXP==
==num==
==num==
==num==
==num==
==num==
==num==
==num==
==false==
+++++%t_38+++++
==call==
==call EXP==
+++++%t_39+++++
==call==
==call EXP==
++++++++++
==string==
++++++++++
==func decl==
==end of program==
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
@.zerodiverrorstring  = constant [23 x i8] c"Error division by zero\00"

define void @printi(i32) {
%spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
ret void
}

define void @print(i8*) {
%spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
ret void
}

define void @checkDiv(i32) {
%divcmp = icmp eq i32 %0, 0
br i1 %divcmp, label %EqualZero, label %notEqualZero
EqualZero:
%div_error_str = getelementptr [23 x i8], [23 x i8]* @.zerodiverrorstring, i32 0, i32 0
call void @print(i8* %div_error_str)
call void @exit(i32 -1)
ret void
notEqualZero:
ret void
}

@.w0 = constant [4 x i8]c"End\00"
define i32 @f(i32, i32, i32, i32, i32, i32, i32, i32) {
%s0 = alloca i32, i32 0
%s1 = alloca i32, i32 0
%s2 = alloca i32, i32 0
%s3 = alloca i32, i32 0
%s4 = alloca i32, i32 0
%s5 = alloca i32, i32 0
%s6 = alloca i32, i32 0
%s7 = alloca i32, i32 0
%s8 = alloca i32, i32 0
%s9 = alloca i32, i32 0
%s10 = alloca i32, i32 0
%s11 = alloca i32, i32 0
%s12 = alloca i32, i32 0
%s13 = alloca i32, i32 0
%s14 = alloca i32, i32 0
%s15 = alloca i32, i32 0
%s16 = alloca i32, i32 0
%s17 = alloca i32, i32 0
%s18 = alloca i32, i32 0
%s19 = alloca i32, i32 0
%s20 = alloca i32, i32 0
%s21 = alloca i32, i32 0
%s22 = alloca i32, i32 0
%s23 = alloca i32, i32 0
%s24 = alloca i32, i32 0
%s25 = alloca i32, i32 0
%s26 = alloca i32, i32 0
%s27 = alloca i32, i32 0
%s28 = alloca i32, i32 0
%s29 = alloca i32, i32 0
%s30 = alloca i32, i32 0
%s31 = alloca i32, i32 0
%s32 = alloca i32, i32 0
%s33 = alloca i32, i32 0
%s34 = alloca i32, i32 0
%s35 = alloca i32, i32 0
%s36 = alloca i32, i32 0
%s37 = alloca i32, i32 0
%s38 = alloca i32, i32 0
%s39 = alloca i32, i32 0
%s40 = alloca i32, i32 0
%s41 = alloca i32, i32 0
%s42 = alloca i32, i32 0
%s43 = alloca i32, i32 0
%s44 = alloca i32, i32 0
%s45 = alloca i32, i32 0
%s46 = alloca i32, i32 0
%s47 = alloca i32, i32 0
%s48 = alloca i32, i32 0
%s49 = alloca i32, i32 0
%t_1 = icmp ne i32 0, %7
br i1 %t_1, label %label_53, label %label_64
label_53:
%t_2 = mul i32 %0, %1

%t_3 = mul i32 %t_2, %2

%t_4 = mul i32 %3, %4

%t_5 = mul i32 %t_4, %5

%t_6 = add i32 %t_3, %t_5

%t_7 = mul i32 %6, %1

%t_8 = mul i32 %t_7, %3

%t_9 = add i32 %t_6, %t_8

ret i32 %t_9
br label %label_64
label_64:
%t_10 = add i32 %0, %1

%t_11 = add i32 %t_10, %2

%t_12 = mul i32 %t_11, %3

%t_13 = add i32 %4, %5

%t_14 = add i32 %t_13, %6

%t_15 = mul i32 %t_14, 2

%t_16 = add i32 %t_12, %t_15

ret i32 %t_16
ret i32 0
}

define i32 @g(i32, i32) {
%s0 = alloca i32, i32 0
%s1 = alloca i32, i32 0
%s2 = alloca i32, i32 0
%s3 = alloca i32, i32 0
%s4 = alloca i32, i32 0
%s5 = alloca i32, i32 0
%s6 = alloca i32, i32 0
%s7 = alloca i32, i32 0
%s8 = alloca i32, i32 0
%s9 = alloca i32, i32 0
%s10 = alloca i32, i32 0
%s11 = alloca i32, i32 0
%s12 = alloca i32, i32 0
%s13 = alloca i32, i32 0
%s14 = alloca i32, i32 0
%s15 = alloca i32, i32 0
%s16 = alloca i32, i32 0
%s17 = alloca i32, i32 0
%s18 = alloca i32, i32 0
%s19 = alloca i32, i32 0
%s20 = alloca i32, i32 0
%s21 = alloca i32, i32 0
%s22 = alloca i32, i32 0
%s23 = alloca i32, i32 0
%s24 = alloca i32, i32 0
%s25 = alloca i32, i32 0
%s26 = alloca i32, i32 0
%s27 = alloca i32, i32 0
%s28 = alloca i32, i32 0
%s29 = alloca i32, i32 0
%s30 = alloca i32, i32 0
%s31 = alloca i32, i32 0
%s32 = alloca i32, i32 0
%s33 = alloca i32, i32 0
%s34 = alloca i32, i32 0
%s35 = alloca i32, i32 0
%s36 = alloca i32, i32 0
%s37 = alloca i32, i32 0
%s38 = alloca i32, i32 0
%s39 = alloca i32, i32 0
%s40 = alloca i32, i32 0
%s41 = alloca i32, i32 0
%s42 = alloca i32, i32 0
%s43 = alloca i32, i32 0
%s44 = alloca i32, i32 0
%s45 = alloca i32, i32 0
%s46 = alloca i32, i32 0
%s47 = alloca i32, i32 0
%s48 = alloca i32, i32 0
%s49 = alloca i32, i32 0
%t_17 = add i32 %0, %1

%t_18 = add i32 %t_17, 1

ret i32 %t_18
ret i32 0
}

define void @main() {
%s0 = alloca i32, i32 0
%s1 = alloca i32, i32 0
%s2 = alloca i32, i32 0
%s3 = alloca i32, i32 0
%s4 = alloca i32, i32 0
%s5 = alloca i32, i32 0
%s6 = alloca i32, i32 0
%s7 = alloca i32, i32 0
%s8 = alloca i32, i32 0
%s9 = alloca i32, i32 0
%s10 = alloca i32, i32 0
%s11 = alloca i32, i32 0
%s12 = alloca i32, i32 0
%s13 = alloca i32, i32 0
%s14 = alloca i32, i32 0
%s15 = alloca i32, i32 0
%s16 = alloca i32, i32 0
%s17 = alloca i32, i32 0
%s18 = alloca i32, i32 0
%s19 = alloca i32, i32 0
%s20 = alloca i32, i32 0
%s21 = alloca i32, i32 0
%s22 = alloca i32, i32 0
%s23 = alloca i32, i32 0
%s24 = alloca i32, i32 0
%s25 = alloca i32, i32 0
%s26 = alloca i32, i32 0
%s27 = alloca i32, i32 0
%s28 = alloca i32, i32 0
%s29 = alloca i32, i32 0
%s30 = alloca i32, i32 0
%s31 = alloca i32, i32 0
%s32 = alloca i32, i32 0
%s33 = alloca i32, i32 0
%s34 = alloca i32, i32 0
%s35 = alloca i32, i32 0
%s36 = alloca i32, i32 0
%s37 = alloca i32, i32 0
%s38 = alloca i32, i32 0
%s39 = alloca i32, i32 0
%s40 = alloca i32, i32 0
%s41 = alloca i32, i32 0
%s42 = alloca i32, i32 0
%s43 = alloca i32, i32 0
%s44 = alloca i32, i32 0
%s45 = alloca i32, i32 0
%s46 = alloca i32, i32 0
%s47 = alloca i32, i32 0
%s48 = alloca i32, i32 0
%s49 = alloca i32, i32 0
%t_19 = call i32 @f(i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 10, i32 0)
call void @printi(i32 %t_19)
%t_20 = call i32 @g(i32 0, i32 0)
%t_21 = call i32 @g(i32 1, i32 0)
%t_22 = call i32 @g(i32 1, i32 1)
%t_23 = call i32 @g(i32 2, i32 1)
%t_24 = call i32 @g(i32 2, i32 2)
%t_25 = call i32 @g(i32 3, i32 2)
%t_26 = call i32 @g(i32 8, i32 1)
%t_27 = call i32 @f(i32 %t_20, i32 %t_21, i32 %t_22, i32 %t_23, i32 %t_24, i32 %t_25, i32 %t_26, i32 0)
call void @printi(i32 %t_27)
%t_28 = call i32 @f(i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 10, i32 1)
call void @printi(i32 %t_28)
%t_29 = call i32 @g(i32 0, i32 0)
%t_30 = call i32 @g(i32 1, i32 0)
%t_31 = call i32 @g(i32 1, i32 1)
%t_32 = call i32 @g(i32 2, i32 1)
%t_33 = call i32 @g(i32 2, i32 2)
%t_34 = call i32 @g(i32 3, i32 2)
%t_35 = call i32 @g(i32 8, i32 1)
%t_36 = call i32 @f(i32 %t_29, i32 %t_30, i32 %t_31, i32 %t_32, i32 %t_33, i32 %t_34, i32 %t_35, i32 1)
call void @printi(i32 %t_36)
%t_37 = call i32 @f(i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 10, i32 1)
%t_38 = call i32 @f(i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 10, i32 0)
%t_39 = call i32 @g(i32 %t_37, i32 %t_38)
call void @printi(i32 %t_39)
%w0 = getelementptr [4 x i8], [4 x i8]* @.w0, i32 0, i32 0
call void @print(i8* %w0)
ret void
}

