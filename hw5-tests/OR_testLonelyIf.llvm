==string==
++++++++++
==num==
==func decl==
==string==
++++++++++
==func decl==
==num==
==true==
==if statement==
==true==
==call==
==call EXP==
==if statement==
==true==
==call==
==call EXP==
==if statement==
==id==
++++++++++
==num==
==true==
==if statement==
==true==
==call==
==call EXP==
==id==
++++++++++
==if statement==
==true==
==call==
==call EXP==
==id==
++++++++++
==if statement==
==true==
==call==
==call EXP==
==if statement==
==id==
++++++++++
==num==
==true==
==if statement==
==true==
==true==
==if statement==
==if statement==
==true==
==true==
==if statement==
==true==
==false==
==if statement==
==true==
==true==
!!!!!label_282!!!!!
==if statement==
==true==
==RELOPNONASSOC==
==
==id==
==num==
==dani==
hiiiiiiiiiiiiii
this is first exp type: INT
this is second exp type: INT
==call==
==call EXP==
!!!!!label_295!!!!!
==if statement==
==func decl==
==end of program==
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
@.zerodiverrorstring  = constant [23 x i8] c"Error division by zero\00"

define void @printi(i32) {
%spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
ret void
}

define void @print(i8*) {
%spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
ret void
}

define void @checkDiv(i32) {
%divcmp = icmp eq i32 %0, 0
br i1 %divcmp, label %EqualZero, label %notEqualZero
EqualZero:
%div_error_str = getelementptr [23 x i8], [23 x i8]* @.zerodiverrorstring, i32 0, i32 0
call void @print(i8* %div_error_str)
call void @exit(i32 -1)
ret void
notEqualZero:
ret void
}

@.w0 = constant [5 x i8]c"set!\00"
@.w1 = constant [9 x i8]c"was here\00"
define i32 @Int() {
%s0 = alloca i32, i32 0
%s1 = alloca i32, i32 0
%s2 = alloca i32, i32 0
%s3 = alloca i32, i32 0
%s4 = alloca i32, i32 0
%s5 = alloca i32, i32 0
%s6 = alloca i32, i32 0
%s7 = alloca i32, i32 0
%s8 = alloca i32, i32 0
%s9 = alloca i32, i32 0
%s10 = alloca i32, i32 0
%s11 = alloca i32, i32 0
%s12 = alloca i32, i32 0
%s13 = alloca i32, i32 0
%s14 = alloca i32, i32 0
%s15 = alloca i32, i32 0
%s16 = alloca i32, i32 0
%s17 = alloca i32, i32 0
%s18 = alloca i32, i32 0
%s19 = alloca i32, i32 0
%s20 = alloca i32, i32 0
%s21 = alloca i32, i32 0
%s22 = alloca i32, i32 0
%s23 = alloca i32, i32 0
%s24 = alloca i32, i32 0
%s25 = alloca i32, i32 0
%s26 = alloca i32, i32 0
%s27 = alloca i32, i32 0
%s28 = alloca i32, i32 0
%s29 = alloca i32, i32 0
%s30 = alloca i32, i32 0
%s31 = alloca i32, i32 0
%s32 = alloca i32, i32 0
%s33 = alloca i32, i32 0
%s34 = alloca i32, i32 0
%s35 = alloca i32, i32 0
%s36 = alloca i32, i32 0
%s37 = alloca i32, i32 0
%s38 = alloca i32, i32 0
%s39 = alloca i32, i32 0
%s40 = alloca i32, i32 0
%s41 = alloca i32, i32 0
%s42 = alloca i32, i32 0
%s43 = alloca i32, i32 0
%s44 = alloca i32, i32 0
%s45 = alloca i32, i32 0
%s46 = alloca i32, i32 0
%s47 = alloca i32, i32 0
%s48 = alloca i32, i32 0
%s49 = alloca i32, i32 0
%w0 = getelementptr [5 x i8], [5 x i8]* @.w0, i32 0, i32 0
call void @print(i8* %w0)
ret i32 500
ret i32 0
}

define void @WasHere() {
%s0 = alloca i32, i32 0
%s1 = alloca i32, i32 0
%s2 = alloca i32, i32 0
%s3 = alloca i32, i32 0
%s4 = alloca i32, i32 0
%s5 = alloca i32, i32 0
%s6 = alloca i32, i32 0
%s7 = alloca i32, i32 0
%s8 = alloca i32, i32 0
%s9 = alloca i32, i32 0
%s10 = alloca i32, i32 0
%s11 = alloca i32, i32 0
%s12 = alloca i32, i32 0
%s13 = alloca i32, i32 0
%s14 = alloca i32, i32 0
%s15 = alloca i32, i32 0
%s16 = alloca i32, i32 0
%s17 = alloca i32, i32 0
%s18 = alloca i32, i32 0
%s19 = alloca i32, i32 0
%s20 = alloca i32, i32 0
%s21 = alloca i32, i32 0
%s22 = alloca i32, i32 0
%s23 = alloca i32, i32 0
%s24 = alloca i32, i32 0
%s25 = alloca i32, i32 0
%s26 = alloca i32, i32 0
%s27 = alloca i32, i32 0
%s28 = alloca i32, i32 0
%s29 = alloca i32, i32 0
%s30 = alloca i32, i32 0
%s31 = alloca i32, i32 0
%s32 = alloca i32, i32 0
%s33 = alloca i32, i32 0
%s34 = alloca i32, i32 0
%s35 = alloca i32, i32 0
%s36 = alloca i32, i32 0
%s37 = alloca i32, i32 0
%s38 = alloca i32, i32 0
%s39 = alloca i32, i32 0
%s40 = alloca i32, i32 0
%s41 = alloca i32, i32 0
%s42 = alloca i32, i32 0
%s43 = alloca i32, i32 0
%s44 = alloca i32, i32 0
%s45 = alloca i32, i32 0
%s46 = alloca i32, i32 0
%s47 = alloca i32, i32 0
%s48 = alloca i32, i32 0
%s49 = alloca i32, i32 0
%w1 = getelementptr [9 x i8], [9 x i8]* @.w1, i32 0, i32 0
call void @print(i8* %w1)
ret void
}

define void @main() {
%s0 = alloca i32, i32 0
%s1 = alloca i32, i32 0
%s2 = alloca i32, i32 0
%s3 = alloca i32, i32 0
%s4 = alloca i32, i32 0
%s5 = alloca i32, i32 0
%s6 = alloca i32, i32 0
%s7 = alloca i32, i32 0
%s8 = alloca i32, i32 0
%s9 = alloca i32, i32 0
%s10 = alloca i32, i32 0
%s11 = alloca i32, i32 0
%s12 = alloca i32, i32 0
%s13 = alloca i32, i32 0
%s14 = alloca i32, i32 0
%s15 = alloca i32, i32 0
%s16 = alloca i32, i32 0
%s17 = alloca i32, i32 0
%s18 = alloca i32, i32 0
%s19 = alloca i32, i32 0
%s20 = alloca i32, i32 0
%s21 = alloca i32, i32 0
%s22 = alloca i32, i32 0
%s23 = alloca i32, i32 0
%s24 = alloca i32, i32 0
%s25 = alloca i32, i32 0
%s26 = alloca i32, i32 0
%s27 = alloca i32, i32 0
%s28 = alloca i32, i32 0
%s29 = alloca i32, i32 0
%s30 = alloca i32, i32 0
%s31 = alloca i32, i32 0
%s32 = alloca i32, i32 0
%s33 = alloca i32, i32 0
%s34 = alloca i32, i32 0
%s35 = alloca i32, i32 0
%s36 = alloca i32, i32 0
%s37 = alloca i32, i32 0
%s38 = alloca i32, i32 0
%s39 = alloca i32, i32 0
%s40 = alloca i32, i32 0
%s41 = alloca i32, i32 0
%s42 = alloca i32, i32 0
%s43 = alloca i32, i32 0
%s44 = alloca i32, i32 0
%s45 = alloca i32, i32 0
%s46 = alloca i32, i32 0
%s47 = alloca i32, i32 0
%s48 = alloca i32, i32 0
%s49 = alloca i32, i32 0
%t_1 = add i32 0, 0
store i32 %t_1, i32* %s0
%t_2 = icmp ne i32 0, 1
br i1 %t_2, label %label_164, label %label_168
label_164:
%t_3 = add i32 0, 0
store i32 %t_3, i32* %s1
br label %label_168
label_168:
%t_4 = icmp ne i32 0, 1
br i1 %t_4, label %label_171, label %label_176
label_171:
%t_5 = call i32 @Int()
%t_6 = add i32 %t_5, 0
store i32 %t_6, i32* %s1
br label %label_176
label_176:
%t_7 = icmp ne i32 0, 1
br i1 %t_7, label %label_179, label %label_184
label_179:
%t_8 = call i32 @Int()
%t_9 = add i32 %t_8, 0
store i32 %t_9, i32* %s0
br label %label_184
label_184:
%t_10 = load i32, i32* %s0
call void @printi(i32 %t_10)
%t_11 = add i32 0, 0
store i32 %t_11, i32* %s0
%t_12 = icmp ne i32 0, 1
br i1 %t_12, label %label_191, label %label_194
label_191:
call void @WasHere()
br label %label_194
label_194:
%t_13 = icmp ne i32 0, 1
br i1 %t_13, label %label_197, label %label_204
label_197:
%t_14 = call i32 @Int()
%t_15 = add i32 %t_14, 0
store i32 %t_15, i32* %s1
%t_16 = load i32, i32* %s1
call void @printi(i32 %t_16)
br label %label_204
label_204:
%t_17 = icmp ne i32 0, 1
br i1 %t_17, label %label_207, label %label_216
label_207:
%t_18 = add i32 0, 0
store i32 %t_18, i32* %s1
%t_19 = call i32 @Int()
%t_20 = add i32 %t_19, 0
store i32 %t_20, i32* %s1
%t_21 = load i32, i32* %s1
call void @printi(i32 %t_21)
br label %label_216
label_216:
%t_22 = icmp ne i32 0, 1
br i1 %t_22, label %label_219, label %label_224
label_219:
%t_23 = call i32 @Int()
%t_24 = add i32 %t_23, 0
store i32 %t_24, i32* %s0
br label %label_224
label_224:
%t_25 = load i32, i32* %s0
call void @printi(i32 %t_25)
%t_26 = add i32 0, 0
store i32 %t_26, i32* %s0
%t_27 = icmp ne i32 0, 1
br i1 %t_27, label %label_231, label %label_234
label_231:
call void @WasHere()
br label %label_234
label_234:
%t_28 = icmp ne i32 0, 1
br i1 %t_28, label %label_237, label %label_245
label_237:
%t_29 = icmp ne i32 0, 1
br i1 %t_29, label %label_240, label %label_243
label_240:
call void @WasHere()
br label %label_243
label_243:
br label %label_245
label_245:
%t_30 = icmp ne i32 0, 1
br i1 %t_30, label %label_248, label %label_261
label_248:
%t_31 = icmp ne i32 0, 1
br i1 %t_31, label %label_251, label %label_255
label_251:
call void @WasHere()
br label %label_259
br label %label_255
label_255:
%t_32 = add i32 0, 0
store i32 %t_32, i32* %s2
br label %label_259
label_259:
br label %label_261
label_261:
%t_33 = icmp ne i32 0, 1
br i1 %t_33, label %label_264, label %label_277
label_264:
%t_34 = icmp ne i32 0, 0
br i1 %t_34, label %label_267, label %label_272
label_267:
%t_35 = add i32 0, 0
store i32 %t_35, i32* %s2
br label %label_275
br label %label_272
label_272:
call void @WasHere()
br label %label_275
label_275:
br label %label_277
label_277:
%t_36 = icmp ne i32 0, 1
br i1 %t_36, label %label_280, label %label_290
label_280:
br label %label_282
label_282:
%t_37 = trunc i32 1 to i1
br i1 %t_37, label %label_284, label %label_288
label_284:
call void @WasHere()
br label %label_288
br label %label_282
label_288:
br label %label_290
label_290:
%t_38 = icmp ne i32 0, 1
br i1 %t_38, label %label_293, label %label_306
label_293:
br label %label_295
label_295:
%t_39 = load i32, i32* %s0
%t_40 = icmp eq i32 %t_39, 0
%t_41 = zext i1 %t_40 to i32
%t_42 = trunc i32 %t_41 to i1
br i1 %t_42, label %label_299, label %label_304
label_299:
%t_43 = call i32 @Int()
%t_44 = add i32 %t_43, 0
store i32 %t_44, i32* %s0
br label %label_295
label_304:
br label %label_306
label_306:
ret void
}

