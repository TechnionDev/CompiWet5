==RELOPLEFT==
==id==
==num==
==bondar==
hiiiiiiiiiiiiii
this is first exp type: INT
this is second exp type: INT
==num==
==string==
++++++++++
==id==
==num==
==mult==
hiiiiiiiiiiiiii
==id==
==minus==
hiiiiiiiiiiiiii
==num==
==string==
++++++++++
==id==
==num==
==mult==
hiiiiiiiiiiiiii
==id==
==plus==
hiiiiiiiiiiiiii
==func decl==
==id==
==RELOPLEFT==
==num==
==plus==
hiiiiiiiiiiiiii
==id==
==bondar==
hiiiiiiiiiiiiii
this is first exp type: INT
this is second exp type: BYTE
==string==
++++++++++
==true==
==string==
++++++++++
==string==
++++++++++
==false==
==string==
++++++++++
==string==
++++++++++
==RELOPLEFT==
==id==
==num==
==bondar==
hiiiiiiiiiiiiii
this is first exp type: INT
this is second exp type: INT
==string==
++++++++++
==false==
==num==
==string==
++++++++++
==string==
++++++++++
!!!!!label_157!!!!!
==num==
==RELOPNONASSOC==
==
==id==
==num==
==dani==
hiiiiiiiiiiiiii
this is first exp type: INT
this is second exp type: INT
==string==
++++++++++
==RELOPNONASSOC==
==
==id==
==num==
==dani==
hiiiiiiiiiiiiii
this is first exp type: INT
this is second exp type: INT
==string==
++++++++++
==if statement==
==num==
+++++%t_32+++++
==string==
++++++++++
==num==
==id==
++++++++++
==string==
++++++++++
==num==
==id==
++++++++++
==string==
++++++++++
==num==
==id==
++++++++++
==string==
++++++++++
==string==
++++++++++
==func decl==
==num==
==num b==
==string==
++++++++++
==id==
==RELOPLEFT==
==num==
==plus==
hiiiiiiiiiiiiii
==id==
==bondar==
hiiiiiiiiiiiiii
this is first exp type: INT
this is second exp type: BYTE
==true==
==string==
++++++++++
==string==
++++++++++
==false==
==string==
++++++++++
==string==
++++++++++
==num==
==RELOPLEFT==
==id==
==num==
==bondar==
hiiiiiiiiiiiiii
this is first exp type: INT
this is second exp type: INT
==string==
++++++++++
==RELOPNONASSOC==
==
==id==
==num==
==dani==
hiiiiiiiiiiiiii
this is first exp type: INT
this is second exp type: INT
==num==
==string==
++++++++++
==string==
++++++++++
!!!!!label_309!!!!!
==num==
==RELOPNONASSOC==
==
==id==
==num==
==dani==
hiiiiiiiiiiiiii
this is first exp type: INT
this is second exp type: INT
==string==
++++++++++
==RELOPNONASSOC==
==
==id==
==num==
==dani==
hiiiiiiiiiiiiii
this is first exp type: INT
this is second exp type: INT
==string==
++++++++++
==if statement==
==num==
+++++%t_70+++++
==string==
++++++++++
==num==
==id==
++++++++++
==string==
++++++++++
==num==
==id==
++++++++++
==string==
++++++++++
==num==
==id==
++++++++++
==string==
++++++++++
==num==
==num b==
++++++++++
==string==
++++++++++
==string==
++++++++++
==string==
++++++++++
==func decl==
==end of program==
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
@.zerodiverrorstring  = constant [23 x i8] c"Error division by zero\00"

define void @printi(i32) {
%spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
ret void
}

define void @print(i8*) {
%spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
ret void
}

define void @checkDiv(i32) {
%divcmp = icmp eq i32 %0, 0
br i1 %divcmp, label %EqualZero, label %notEqualZero
EqualZero:
%div_error_str = getelementptr [23 x i8], [23 x i8]* @.zerodiverrorstring, i32 0, i32 0
call void @print(i8* %div_error_str)
call void @exit(i32 -1)
ret void
notEqualZero:
ret void
}

@.w0 = constant [18 x i8]c"if->return exp sc\00"
@.w1 = constant [20 x i8]c"else->return exp sc\00"
@.w2 = constant [6 x i8]c"error\00"
@.w3 = constant [9 x i8]c"else->if\00"
@.w4 = constant [6 x i8]c"error\00"
@.w5 = constant [6 x i8]c"sssss\00"
@.w6 = constant [11 x i8]c"else->else\00"
@.w7 = constant [12 x i8]c"else->while\00"
@.w8 = constant [6 x i8]c"error\00"
@.w9 = constant [12 x i8]c"else->break\00"
@.w10 = constant [13 x i8]c"else->switch\00"
@.w11 = constant [6 x i8]c"error\00"
@.w12 = constant [28 x i8]c"else->type ID assign Exp sc\00"
@.w13 = constant [23 x i8]c"else->ID assign Exp sc\00"
@.w14 = constant [17 x i8]c"else->type ID sc\00"
@.w15 = constant [16 x i8]c"else->return sc\00"
@.w16 = constant [6 x i8]c"error\00"
@.w17 = constant [6 x i8]c"start\00"
@.w18 = constant [7 x i8]c"if->if\00"
@.w19 = constant [6 x i8]c"error\00"
@.w20 = constant [6 x i8]c"error\00"
@.w21 = constant [9 x i8]c"if->else\00"
@.w22 = constant [10 x i8]c"if->while\00"
@.w23 = constant [10 x i8]c"if->break\00"
@.w24 = constant [6 x i8]c"error\00"
@.w25 = constant [11 x i8]c"if->switch\00"
@.w26 = constant [6 x i8]c"error\00"
@.w27 = constant [26 x i8]c"if->type ID assign Exp sc\00"
@.w28 = constant [21 x i8]c"if->ID assign Exp sc\00"
@.w29 = constant [15 x i8]c"if->type ID sc\00"
@.w30 = constant [30 x i8]c"go check all the same in else\00"
@.w31 = constant [14 x i8]c"if->return sc\00"
@.w32 = constant [6 x i8]c"error\00"
@.w33 = constant [6 x i8]c"error\00"
define i32 @checkInFunc(i32) {
%s0 = alloca i32, i32 0
%s1 = alloca i32, i32 0
%s2 = alloca i32, i32 0
%s3 = alloca i32, i32 0
%s4 = alloca i32, i32 0
%s5 = alloca i32, i32 0
%s6 = alloca i32, i32 0
%s7 = alloca i32, i32 0
%s8 = alloca i32, i32 0
%s9 = alloca i32, i32 0
%s10 = alloca i32, i32 0
%s11 = alloca i32, i32 0
%s12 = alloca i32, i32 0
%s13 = alloca i32, i32 0
%s14 = alloca i32, i32 0
%s15 = alloca i32, i32 0
%s16 = alloca i32, i32 0
%s17 = alloca i32, i32 0
%s18 = alloca i32, i32 0
%s19 = alloca i32, i32 0
%s20 = alloca i32, i32 0
%s21 = alloca i32, i32 0
%s22 = alloca i32, i32 0
%s23 = alloca i32, i32 0
%s24 = alloca i32, i32 0
%s25 = alloca i32, i32 0
%s26 = alloca i32, i32 0
%s27 = alloca i32, i32 0
%s28 = alloca i32, i32 0
%s29 = alloca i32, i32 0
%s30 = alloca i32, i32 0
%s31 = alloca i32, i32 0
%s32 = alloca i32, i32 0
%s33 = alloca i32, i32 0
%s34 = alloca i32, i32 0
%s35 = alloca i32, i32 0
%s36 = alloca i32, i32 0
%s37 = alloca i32, i32 0
%s38 = alloca i32, i32 0
%s39 = alloca i32, i32 0
%s40 = alloca i32, i32 0
%s41 = alloca i32, i32 0
%s42 = alloca i32, i32 0
%s43 = alloca i32, i32 0
%s44 = alloca i32, i32 0
%s45 = alloca i32, i32 0
%s46 = alloca i32, i32 0
%s47 = alloca i32, i32 0
%s48 = alloca i32, i32 0
%s49 = alloca i32, i32 0
%t_1 = icmp slt i32 %0, 5
%t_2 = zext i1 %t_1 to i32
%t_3 = icmp ne i32 0, %t_2
br i1 %t_3, label %label_54, label %label_64
label_54:
%t_4 = add i32 1, 0
store i32 %t_4, i32* %s1
%w0 = getelementptr [18 x i8], [18 x i8]* @.w0, i32 0, i32 0
call void @print(i8* %w0)
%t_5 = mul i32 %0, 4

%t_6 = load i32, i32* %s1
%t_7 = sub i32 %t_5, %t_6

ret i32 %t_7
br label %label_73
br label %label_64
label_64:
%t_8 = add i32 1, 0
store i32 %t_8, i32* %s1
%w1 = getelementptr [20 x i8], [20 x i8]* @.w1, i32 0, i32 0
call void @print(i8* %w1)
%t_9 = mul i32 %0, 4

%t_10 = load i32, i32* %s1
%t_11 = add i32 %t_9, %t_10

ret i32 %t_11
br label %label_73
label_73:
ret i32 0
}

define void @fux(i32, i32) {
%s0 = alloca i32, i32 0
%s1 = alloca i32, i32 0
%s2 = alloca i32, i32 0
%s3 = alloca i32, i32 0
%s4 = alloca i32, i32 0
%s5 = alloca i32, i32 0
%s6 = alloca i32, i32 0
%s7 = alloca i32, i32 0
%s8 = alloca i32, i32 0
%s9 = alloca i32, i32 0
%s10 = alloca i32, i32 0
%s11 = alloca i32, i32 0
%s12 = alloca i32, i32 0
%s13 = alloca i32, i32 0
%s14 = alloca i32, i32 0
%s15 = alloca i32, i32 0
%s16 = alloca i32, i32 0
%s17 = alloca i32, i32 0
%s18 = alloca i32, i32 0
%s19 = alloca i32, i32 0
%s20 = alloca i32, i32 0
%s21 = alloca i32, i32 0
%s22 = alloca i32, i32 0
%s23 = alloca i32, i32 0
%s24 = alloca i32, i32 0
%s25 = alloca i32, i32 0
%s26 = alloca i32, i32 0
%s27 = alloca i32, i32 0
%s28 = alloca i32, i32 0
%s29 = alloca i32, i32 0
%s30 = alloca i32, i32 0
%s31 = alloca i32, i32 0
%s32 = alloca i32, i32 0
%s33 = alloca i32, i32 0
%s34 = alloca i32, i32 0
%s35 = alloca i32, i32 0
%s36 = alloca i32, i32 0
%s37 = alloca i32, i32 0
%s38 = alloca i32, i32 0
%s39 = alloca i32, i32 0
%s40 = alloca i32, i32 0
%s41 = alloca i32, i32 0
%s42 = alloca i32, i32 0
%s43 = alloca i32, i32 0
%s44 = alloca i32, i32 0
%s45 = alloca i32, i32 0
%s46 = alloca i32, i32 0
%s47 = alloca i32, i32 0
%s48 = alloca i32, i32 0
%s49 = alloca i32, i32 0
%t_12 = add i32 %0, 5

%t_13 = icmp slt i32 %t_12, %1
%t_14 = zext i1 %t_13 to i32
%t_15 = icmp ne i32 0, %t_14
br i1 %t_15, label %label_131, label %label_135
label_131:
%w2 = getelementptr [6 x i8], [6 x i8]* @.w2, i32 0, i32 0
call void @print(i8* %w2)
br label %label_219
br label %label_135
label_135:
%t_16 = icmp ne i32 0, 1
br i1 %t_16, label %label_138, label %label_142
label_138:
%w3 = getelementptr [9 x i8], [9 x i8]* @.w3, i32 0, i32 0
call void @print(i8* %w3)
br label %label_145
br label %label_142
label_142:
%w4 = getelementptr [6 x i8], [6 x i8]* @.w4, i32 0, i32 0
call void @print(i8* %w4)
br label %label_145
label_145:
%t_17 = icmp ne i32 0, 0
br i1 %t_17, label %label_148, label %label_152
label_148:
%w5 = getelementptr [6 x i8], [6 x i8]* @.w5, i32 0, i32 0
call void @print(i8* %w5)
br label %label_155
br label %label_152
label_152:
%w6 = getelementptr [11 x i8], [11 x i8]* @.w6, i32 0, i32 0
call void @print(i8* %w6)
br label %label_155
label_155:
br label %label_157
label_157:
%t_18 = icmp slt i32 %0, 10
%t_19 = zext i1 %t_18 to i32
%t_20 = trunc i32 %t_19 to i1
br i1 %t_20, label %label_160, label %label_176
label_160:
%w7 = getelementptr [12 x i8], [12 x i8]* @.w7, i32 0, i32 0
call void @print(i8* %w7)
%t_21 = icmp ne i32 0, 0
br i1 %t_21, label %label_164, label %label_170
label_164:
%t_22 = add i32 7, 0
store i32 %t_22, i32* %s2
%w8 = getelementptr [6 x i8], [6 x i8]* @.w8, i32 0, i32 0
call void @print(i8* %w8)
br label %label_174
br label %label_170
label_170:
%w9 = getelementptr [12 x i8], [12 x i8]* @.w9, i32 0, i32 0
call void @print(i8* %w9)
br label %label_176
br label %label_174
label_174:
br label %label_157
label_176:
%t_23 = add i32 7, 0
store i32 %t_23, i32* %s3
%t_24 = load i32, i32* %s3
%t_25 = icmp eq i32 %t_24, 7
%t_26 = zext i1 %t_25 to i32
%t_27 = icmp ne i32 0, %t_26
br i1 %t_27, label %label_183, label %label_187
label_183:
%w10 = getelementptr [13 x i8], [13 x i8]* @.w10, i32 0, i32 0
call void @print(i8* %w10)
br label %label_197
br label %label_187
label_187:
%t_28 = load i32, i32* %s3
%t_29 = icmp eq i32 %t_28, 6
%t_30 = zext i1 %t_29 to i32
%t_31 = icmp ne i32 0, %t_30
br i1 %t_31, label %label_192, label %label_195
label_192:
%w11 = getelementptr [6 x i8], [6 x i8]* @.w11, i32 0, i32 0
call void @print(i8* %w11)
br label %label_195
label_195:
br label %label_197
label_197:
%t_32 = call i32 @checkInFunc(i32 8)
%w12 = getelementptr [28 x i8], [28 x i8]* @.w12, i32 0, i32 0
call void @print(i8* %w12)
%t_33 = add i32 6, 0
store i32 %t_33, i32* %s4
%t_34 = load i32, i32* %s4
call void @printi(i32 %t_34)
%w13 = getelementptr [23 x i8], [23 x i8]* @.w13, i32 0, i32 0
call void @print(i8* %w13)
%t_35 = add i32 8, 0
store i32 %t_35, i32* %s4
%t_36 = load i32, i32* %s4
call void @printi(i32 %t_36)
%w14 = getelementptr [17 x i8], [17 x i8]* @.w14, i32 0, i32 0
call void @print(i8* %w14)
%t_37 = add i32 0, 0
store i32 %t_37, i32* %s5
%t_38 = add i32 5, 0
store i32 %t_38, i32* %s5
%t_39 = load i32, i32* %s5
call void @printi(i32 %t_39)
%w15 = getelementptr [16 x i8], [16 x i8]* @.w15, i32 0, i32 0
call void @print(i8* %w15)
ret void
br label %label_219
label_219:
%w16 = getelementptr [6 x i8], [6 x i8]* @.w16, i32 0, i32 0
call void @print(i8* %w16)
ret void
}

define void @main() {
%s0 = alloca i32, i32 0
%s1 = alloca i32, i32 0
%s2 = alloca i32, i32 0
%s3 = alloca i32, i32 0
%s4 = alloca i32, i32 0
%s5 = alloca i32, i32 0
%s6 = alloca i32, i32 0
%s7 = alloca i32, i32 0
%s8 = alloca i32, i32 0
%s9 = alloca i32, i32 0
%s10 = alloca i32, i32 0
%s11 = alloca i32, i32 0
%s12 = alloca i32, i32 0
%s13 = alloca i32, i32 0
%s14 = alloca i32, i32 0
%s15 = alloca i32, i32 0
%s16 = alloca i32, i32 0
%s17 = alloca i32, i32 0
%s18 = alloca i32, i32 0
%s19 = alloca i32, i32 0
%s20 = alloca i32, i32 0
%s21 = alloca i32, i32 0
%s22 = alloca i32, i32 0
%s23 = alloca i32, i32 0
%s24 = alloca i32, i32 0
%s25 = alloca i32, i32 0
%s26 = alloca i32, i32 0
%s27 = alloca i32, i32 0
%s28 = alloca i32, i32 0
%s29 = alloca i32, i32 0
%s30 = alloca i32, i32 0
%s31 = alloca i32, i32 0
%s32 = alloca i32, i32 0
%s33 = alloca i32, i32 0
%s34 = alloca i32, i32 0
%s35 = alloca i32, i32 0
%s36 = alloca i32, i32 0
%s37 = alloca i32, i32 0
%s38 = alloca i32, i32 0
%s39 = alloca i32, i32 0
%s40 = alloca i32, i32 0
%s41 = alloca i32, i32 0
%s42 = alloca i32, i32 0
%s43 = alloca i32, i32 0
%s44 = alloca i32, i32 0
%s45 = alloca i32, i32 0
%s46 = alloca i32, i32 0
%s47 = alloca i32, i32 0
%s48 = alloca i32, i32 0
%s49 = alloca i32, i32 0
%t_40 = add i32 7, 0
store i32 %t_40, i32* %s0
%t_41 = trunc i32 25 to i8
%t_42 = zext i8 %t_41 to i32
store i32 %t_42, i32* %s1
%w17 = getelementptr [6 x i8], [6 x i8]* @.w17, i32 0, i32 0
call void @print(i8* %w17)
%t_43 = load i32, i32* %s0
%t_44 = add i32 %t_43, 3

%t_45 = load i32, i32* %s1
%t_46 = icmp slt i32 %t_44, %t_45
%t_47 = zext i1 %t_46 to i32
%t_48 = icmp ne i32 0, %t_47
br i1 %t_48, label %label_285, label %label_377
label_285:
%t_49 = icmp ne i32 0, 1
br i1 %t_49, label %label_288, label %label_292
label_288:
%w18 = getelementptr [7 x i8], [7 x i8]* @.w18, i32 0, i32 0
call void @print(i8* %w18)
br label %label_295
br label %label_292
label_292:
%w19 = getelementptr [6 x i8], [6 x i8]* @.w19, i32 0, i32 0
call void @print(i8* %w19)
br label %label_295
label_295:
%t_50 = icmp ne i32 0, 0
br i1 %t_50, label %label_298, label %label_302
label_298:
%w20 = getelementptr [6 x i8], [6 x i8]* @.w20, i32 0, i32 0
call void @print(i8* %w20)
br label %label_305
br label %label_302
label_302:
%w21 = getelementptr [9 x i8], [9 x i8]* @.w21, i32 0, i32 0
call void @print(i8* %w21)
br label %label_305
label_305:
%t_51 = add i32 9, 0
store i32 %t_51, i32* %s0
br label %label_309
label_309:
%t_52 = load i32, i32* %s0
%t_53 = icmp slt i32 %t_52, 10
%t_54 = zext i1 %t_53 to i32
%t_55 = trunc i32 %t_54 to i1
br i1 %t_55, label %label_313, label %label_331
label_313:
%w22 = getelementptr [10 x i8], [10 x i8]* @.w22, i32 0, i32 0
call void @print(i8* %w22)
%t_56 = load i32, i32* %s0
%t_57 = icmp eq i32 %t_56, 9
%t_58 = zext i1 %t_57 to i32
%t_59 = icmp ne i32 0, %t_58
br i1 %t_59, label %label_319, label %label_326
label_319:
%t_60 = add i32 7, 0
store i32 %t_60, i32* %s2
%w23 = getelementptr [10 x i8], [10 x i8]* @.w23, i32 0, i32 0
call void @print(i8* %w23)
br label %label_331
br label %label_329
br label %label_326
label_326:
%w24 = getelementptr [6 x i8], [6 x i8]* @.w24, i32 0, i32 0
call void @print(i8* %w24)
br label %label_329
label_329:
br label %label_309
label_331:
%t_61 = add i32 7, 0
store i32 %t_61, i32* %s3
%t_62 = load i32, i32* %s3
%t_63 = icmp eq i32 %t_62, 7
%t_64 = zext i1 %t_63 to i32
%t_65 = icmp ne i32 0, %t_64
br i1 %t_65, label %label_338, label %label_342
label_338:
%w25 = getelementptr [11 x i8], [11 x i8]* @.w25, i32 0, i32 0
call void @print(i8* %w25)
br label %label_352
br label %label_342
label_342:
%t_66 = load i32, i32* %s3
%t_67 = icmp eq i32 %t_66, 6
%t_68 = zext i1 %t_67 to i32
%t_69 = icmp ne i32 0, %t_68
br i1 %t_69, label %label_347, label %label_350
label_347:
%w26 = getelementptr [6 x i8], [6 x i8]* @.w26, i32 0, i32 0
call void @print(i8* %w26)
br label %label_350
label_350:
br label %label_352
label_352:
%t_70 = call i32 @checkInFunc(i32 3)
%w27 = getelementptr [26 x i8], [26 x i8]* @.w27, i32 0, i32 0
call void @print(i8* %w27)
%t_71 = add i32 6, 0
store i32 %t_71, i32* %s4
%t_72 = load i32, i32* %s4
call void @printi(i32 %t_72)
%w28 = getelementptr [21 x i8], [21 x i8]* @.w28, i32 0, i32 0
call void @print(i8* %w28)
%t_73 = add i32 8, 0
store i32 %t_73, i32* %s4
%t_74 = load i32, i32* %s4
call void @printi(i32 %t_74)
%w29 = getelementptr [15 x i8], [15 x i8]* @.w29, i32 0, i32 0
call void @print(i8* %w29)
%t_75 = add i32 0, 0
store i32 %t_75, i32* %s5
%t_76 = add i32 8, 0
store i32 %t_76, i32* %s5
%t_77 = load i32, i32* %s5
call void @printi(i32 %t_77)
%w30 = getelementptr [30 x i8], [30 x i8]* @.w30, i32 0, i32 0
call void @print(i8* %w30)
call void @fux(i32 1, i32 5)
%w31 = getelementptr [14 x i8], [14 x i8]* @.w31, i32 0, i32 0
call void @print(i8* %w31)
ret void
br label %label_380
br label %label_377
label_377:
%w32 = getelementptr [6 x i8], [6 x i8]* @.w32, i32 0, i32 0
call void @print(i8* %w32)
br label %label_380
label_380:
%w33 = getelementptr [6 x i8], [6 x i8]* @.w33, i32 0, i32 0
call void @print(i8* %w33)
ret void
}

