declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
@.zerodiverrorstring  = constant [23 x i8] c"Error division by zero\00"

define void @printi(i32) {
%spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
ret void
}

define void @print(i8*) {
%spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
ret void
}

define void @checkDiv(i32) {
%divcmp = icmp eq i32 %0, 0
br i1 %divcmp, label %EqualZero, label %notEqualZero
EqualZero:
%div_error_str = getelementptr [23 x i8], [23 x i8]* @.zerodiverrorstring, i32 0, i32 0
call void @print(i8* %div_error_str)
call void @exit(i32 -1)
ret void
notEqualZero:
ret void
}

@.w0 = constant [14 x i8]c"in first loop\00"
@.w1 = constant [15 x i8]c"in second loop\00"
@.w2 = constant [25 x i8]c"second loop didn't break\00"
@.w3 = constant [18 x i8]c"break second loop\00"
@.w4 = constant [34 x i8]c"finished iteration in second loop\00"
@.w5 = constant [24 x i8]c"first loop didn't break\00"
@.w6 = constant [17 x i8]c"break first loop\00"
@.w7 = constant [33 x i8]c"finished iteration in first loop\00"
@.w8 = constant [8 x i8]c"bye bye\00"
define void @main() {
%s0 = alloca i32, i32 0
%s1 = alloca i32, i32 0
%s2 = alloca i32, i32 0
%s3 = alloca i32, i32 0
%s4 = alloca i32, i32 0
%s5 = alloca i32, i32 0
%s6 = alloca i32, i32 0
%s7 = alloca i32, i32 0
%s8 = alloca i32, i32 0
%s9 = alloca i32, i32 0
%s10 = alloca i32, i32 0
%s11 = alloca i32, i32 0
%s12 = alloca i32, i32 0
%s13 = alloca i32, i32 0
%s14 = alloca i32, i32 0
%s15 = alloca i32, i32 0
%s16 = alloca i32, i32 0
%s17 = alloca i32, i32 0
%s18 = alloca i32, i32 0
%s19 = alloca i32, i32 0
%s20 = alloca i32, i32 0
%s21 = alloca i32, i32 0
%s22 = alloca i32, i32 0
%s23 = alloca i32, i32 0
%s24 = alloca i32, i32 0
%s25 = alloca i32, i32 0
%s26 = alloca i32, i32 0
%s27 = alloca i32, i32 0
%s28 = alloca i32, i32 0
%s29 = alloca i32, i32 0
%s30 = alloca i32, i32 0
%s31 = alloca i32, i32 0
%s32 = alloca i32, i32 0
%s33 = alloca i32, i32 0
%s34 = alloca i32, i32 0
%s35 = alloca i32, i32 0
%s36 = alloca i32, i32 0
%s37 = alloca i32, i32 0
%s38 = alloca i32, i32 0
%s39 = alloca i32, i32 0
%s40 = alloca i32, i32 0
%s41 = alloca i32, i32 0
%s42 = alloca i32, i32 0
%s43 = alloca i32, i32 0
%s44 = alloca i32, i32 0
%s45 = alloca i32, i32 0
%s46 = alloca i32, i32 0
%s47 = alloca i32, i32 0
%s48 = alloca i32, i32 0
%s49 = alloca i32, i32 0
%t_1 = add i32 5, 0
store i32 %t_1, i32* %s0
%t_2 = trunc i32 4 to i8
%t_3 = zext i8 %t_2 to i32
store i32 %t_3, i32* %s1
%t_4 = add i32 0, 1
store i32 %t_4, i32* %s2
br label %label_58
label_58:
%t_5 = load i32, i32* %s0
%t_6 = icmp slt i32 %t_5, 10
%t_7 = zext i1 %t_6 to i32
%t_8 = trunc i32 %t_7 to i1
br i1 %t_8, label %label_62, label %label_140
label_62:
%w0 = getelementptr [14 x i8], [14 x i8]* @.w0, i32 0, i32 0
call void @print(i8* %w0)
%t_9 = load i32, i32* %s0
call void @printi(i32 %t_9)
br label %label_67
label_67:
%t_10 = load i32, i32* %s1
%t_11 = icmp slt i32 %t_10, 6
%t_12 = zext i1 %t_11 to i32
%t_13 = trunc i32 %t_12 to i1
br i1 %t_13, label %label_71, label %label_98
label_71:
%w1 = getelementptr [15 x i8], [15 x i8]* @.w1, i32 0, i32 0
call void @print(i8* %w1)
%t_14 = load i32, i32* %s1
call void @printi(i32 %t_14)
%t_15 = load i32, i32* %s1
%t_16 = icmp eq i32 %t_15, 4
%t_17 = zext i1 %t_16 to i32
%t_18 = icmp ne i32 0, %t_17
br i1 %t_18, label %label_79, label %label_89
label_79:
%w2 = getelementptr [25 x i8], [25 x i8]* @.w2, i32 0, i32 0
call void @print(i8* %w2)
%t_19 = load i32, i32* %s1
call void @printi(i32 %t_19)
%t_20 = load i32, i32* %s1
%t_21 = add i32 %t_20, 1
%t_22 = trunc i32 %t_21 to i8
%t_23 = zext i8 %t_22 to i32
%t_24 = trunc i32 %t_23 to i8
%t_25 = zext i8 %t_24 to i32
store i32 %t_25, i32* %s1
br label %label_95
br label %label_89
label_89:
%w3 = getelementptr [18 x i8], [18 x i8]* @.w3, i32 0, i32 0
call void @print(i8* %w3)
%t_26 = load i32, i32* %s1
call void @printi(i32 %t_26)
br label %label_98
br label %label_95
label_95:
%w4 = getelementptr [34 x i8], [34 x i8]* @.w4, i32 0, i32 0
call void @print(i8* %w4)
br label %label_67
label_98:
br label %label_104
label_100:
%t_27 = load i32, i32* %s0
%t_28 = icmp sle i32 %t_27, 7
%t_29 = zext i1 %t_28 to i32
br label %label_109
label_104:
%t_31 = load i32, i32* %s2
%t_30 = icmp ne i32 %t_31, 0
br i1 %t_30, label %label_112, label %label_100
br label %label_109
label_109:
%t_32 = icmp ne i32 %t_29, 0
%t_33 = zext i1 %t_32 to i32
br label %label_112
label_112:
%t_34 = phi i32 [1, %label_104], [%t_33, %label_109]
%t_35 = sub i32 1, %t_34
%t_36 = icmp ne i32 0, %t_35
br i1 %t_36, label %label_117, label %label_123
label_117:
%w5 = getelementptr [24 x i8], [24 x i8]* @.w5, i32 0, i32 0
call void @print(i8* %w5)
%t_37 = load i32, i32* %s0
call void @printi(i32 %t_37)
br label %label_129
br label %label_123
label_123:
%w6 = getelementptr [17 x i8], [17 x i8]* @.w6, i32 0, i32 0
call void @print(i8* %w6)
%t_38 = load i32, i32* %s0
call void @printi(i32 %t_38)
br label %label_140
br label %label_129
label_129:
%t_39 = load i32, i32* %s0
%t_40 = add i32 %t_39, 1

%t_41 = add i32 %t_40, 0
store i32 %t_41, i32* %s0
%t_42 = load i32, i32* %s1
%t_43 = sub i32 %t_42, 1
%t_44 = trunc i32 %t_43 to i8
%t_45 = zext i8 %t_44 to i32
%t_46 = trunc i32 %t_45 to i8
%t_47 = zext i8 %t_46 to i32
store i32 %t_47, i32* %s1
%w7 = getelementptr [33 x i8], [33 x i8]* @.w7, i32 0, i32 0
call void @print(i8* %w7)
br label %label_58
label_140:
%w8 = getelementptr [8 x i8], [8 x i8]* @.w8, i32 0, i32 0
call void @print(i8* %w8)
ret void
}

