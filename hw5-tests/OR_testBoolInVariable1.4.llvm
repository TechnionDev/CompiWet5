==id==
==string==
++++++++++
==string==
++++++++++
==func decl==
==true==
==func decl==
==false==
==func decl==
==true==
==false==
==false==
==RELOPNONASSOC==
!=
==num==
==num==
==dani==
hiiiiiiiiiiiiii
this is first exp type: INT
this is second exp type: INT
==OR==
==start OR==
==end OR==
==id==
++++++++++
==id==
==call==
==call EXP==
==OR==
==start OR==
==end OR==
==id==
++++++++++
==id==
==false==
==OR==
==start OR==
==end OR==
==id==
++++++++++
==id==
==id==
==OR==
==start OR==
==end OR==
==id==
++++++++++
==id==
==RELOPLEFT==
==num==
==num==
==bondar==
hiiiiiiiiiiiiii
this is first exp type: INT
this is second exp type: INT
==OR==
==start OR==
==end OR==
==id==
++++++++++
==id==
==RELOPNONASSOC==
!=
==num==
==num==
==dani==
hiiiiiiiiiiiiii
this is first exp type: INT
this is second exp type: INT
==OR==
==start OR==
==end OR==
==id==
++++++++++
==RELOPLEFT==
==num==
==num==
==bondar==
hiiiiiiiiiiiiii
this is first exp type: INT
this is second exp type: INT
==call==
==call EXP==
==OR==
==start OR==
==end OR==
==id==
++++++++++
==RELOPLEFT==
==num==
==num==
==bondar==
hiiiiiiiiiiiiii
this is first exp type: INT
this is second exp type: INT
==false==
==OR==
==start OR==
==end OR==
==id==
++++++++++
==RELOPLEFT==
==num==
==num==
==bondar==
hiiiiiiiiiiiiii
this is first exp type: INT
this is second exp type: INT
==id==
==OR==
==start OR==
==end OR==
==id==
++++++++++
==RELOPLEFT==
==num==
==num==
==bondar==
hiiiiiiiiiiiiii
this is first exp type: INT
this is second exp type: INT
==RELOPLEFT==
==num==
==num==
==bondar==
hiiiiiiiiiiiiii
this is first exp type: INT
this is second exp type: INT
==OR==
==start OR==
==end OR==
==id==
++++++++++
==RELOPLEFT==
==num==
==num==
==bondar==
hiiiiiiiiiiiiii
this is first exp type: INT
this is second exp type: INT
==RELOPNONASSOC==
!=
==num==
==num==
==dani==
hiiiiiiiiiiiiii
this is first exp type: INT
this is second exp type: INT
==OR==
==start OR==
==end OR==
==id==
++++++++++
==RELOPNONASSOC==
!=
==num==
==num==
==dani==
hiiiiiiiiiiiiii
this is first exp type: INT
this is second exp type: INT
==call==
==call EXP==
==OR==
==start OR==
==end OR==
==id==
++++++++++
==RELOPNONASSOC==
!=
==num==
==num==
==dani==
hiiiiiiiiiiiiii
this is first exp type: INT
this is second exp type: INT
==false==
==OR==
==start OR==
==end OR==
==id==
++++++++++
==RELOPNONASSOC==
!=
==num==
==num==
==dani==
hiiiiiiiiiiiiii
this is first exp type: INT
this is second exp type: INT
==id==
==OR==
==start OR==
==end OR==
==id==
++++++++++
==RELOPNONASSOC==
!=
==num==
==num==
==dani==
hiiiiiiiiiiiiii
this is first exp type: INT
this is second exp type: INT
==RELOPLEFT==
==num==
==num==
==bondar==
hiiiiiiiiiiiiii
this is first exp type: INT
this is second exp type: INT
==OR==
==start OR==
==end OR==
==id==
++++++++++
==RELOPNONASSOC==
!=
==num==
==num==
==dani==
hiiiiiiiiiiiiii
this is first exp type: INT
this is second exp type: INT
==RELOPNONASSOC==
!=
==num==
==num==
==dani==
hiiiiiiiiiiiiii
this is first exp type: INT
this is second exp type: INT
==OR==
==start OR==
==end OR==
==id==
++++++++++
==func decl==
==end of program==
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
@.zerodiverrorstring  = constant [23 x i8] c"Error division by zero\00"

define void @printi(i32) {
%spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
ret void
}

define void @print(i8*) {
%spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
ret void
}

define void @checkDiv(i32) {
%divcmp = icmp eq i32 %0, 0
br i1 %divcmp, label %EqualZero, label %notEqualZero
EqualZero:
%div_error_str = getelementptr [23 x i8], [23 x i8]* @.zerodiverrorstring, i32 0, i32 0
call void @print(i8* %div_error_str)
call void @exit(i32 -1)
ret void
notEqualZero:
ret void
}

@.w0 = constant [5 x i8]c"true\00"
@.w1 = constant [6 x i8]c"false\00"
define void @printBool(i32) {
%s0 = alloca i32, i32 0
%s1 = alloca i32, i32 0
%s2 = alloca i32, i32 0
%s3 = alloca i32, i32 0
%s4 = alloca i32, i32 0
%s5 = alloca i32, i32 0
%s6 = alloca i32, i32 0
%s7 = alloca i32, i32 0
%s8 = alloca i32, i32 0
%s9 = alloca i32, i32 0
%s10 = alloca i32, i32 0
%s11 = alloca i32, i32 0
%s12 = alloca i32, i32 0
%s13 = alloca i32, i32 0
%s14 = alloca i32, i32 0
%s15 = alloca i32, i32 0
%s16 = alloca i32, i32 0
%s17 = alloca i32, i32 0
%s18 = alloca i32, i32 0
%s19 = alloca i32, i32 0
%s20 = alloca i32, i32 0
%s21 = alloca i32, i32 0
%s22 = alloca i32, i32 0
%s23 = alloca i32, i32 0
%s24 = alloca i32, i32 0
%s25 = alloca i32, i32 0
%s26 = alloca i32, i32 0
%s27 = alloca i32, i32 0
%s28 = alloca i32, i32 0
%s29 = alloca i32, i32 0
%s30 = alloca i32, i32 0
%s31 = alloca i32, i32 0
%s32 = alloca i32, i32 0
%s33 = alloca i32, i32 0
%s34 = alloca i32, i32 0
%s35 = alloca i32, i32 0
%s36 = alloca i32, i32 0
%s37 = alloca i32, i32 0
%s38 = alloca i32, i32 0
%s39 = alloca i32, i32 0
%s40 = alloca i32, i32 0
%s41 = alloca i32, i32 0
%s42 = alloca i32, i32 0
%s43 = alloca i32, i32 0
%s44 = alloca i32, i32 0
%s45 = alloca i32, i32 0
%s46 = alloca i32, i32 0
%s47 = alloca i32, i32 0
%s48 = alloca i32, i32 0
%s49 = alloca i32, i32 0
%t_1 = icmp ne i32 0, %0
br i1 %t_1, label %label_53, label %label_57
label_53:
%w0 = getelementptr [5 x i8], [5 x i8]* @.w0, i32 0, i32 0
call void @print(i8* %w0)
br label %label_60
br label %label_57
label_57:
%w1 = getelementptr [6 x i8], [6 x i8]* @.w1, i32 0, i32 0
call void @print(i8* %w1)
br label %label_60
label_60:
ret void
}

define i32 @True() {
%s0 = alloca i32, i32 0
%s1 = alloca i32, i32 0
%s2 = alloca i32, i32 0
%s3 = alloca i32, i32 0
%s4 = alloca i32, i32 0
%s5 = alloca i32, i32 0
%s6 = alloca i32, i32 0
%s7 = alloca i32, i32 0
%s8 = alloca i32, i32 0
%s9 = alloca i32, i32 0
%s10 = alloca i32, i32 0
%s11 = alloca i32, i32 0
%s12 = alloca i32, i32 0
%s13 = alloca i32, i32 0
%s14 = alloca i32, i32 0
%s15 = alloca i32, i32 0
%s16 = alloca i32, i32 0
%s17 = alloca i32, i32 0
%s18 = alloca i32, i32 0
%s19 = alloca i32, i32 0
%s20 = alloca i32, i32 0
%s21 = alloca i32, i32 0
%s22 = alloca i32, i32 0
%s23 = alloca i32, i32 0
%s24 = alloca i32, i32 0
%s25 = alloca i32, i32 0
%s26 = alloca i32, i32 0
%s27 = alloca i32, i32 0
%s28 = alloca i32, i32 0
%s29 = alloca i32, i32 0
%s30 = alloca i32, i32 0
%s31 = alloca i32, i32 0
%s32 = alloca i32, i32 0
%s33 = alloca i32, i32 0
%s34 = alloca i32, i32 0
%s35 = alloca i32, i32 0
%s36 = alloca i32, i32 0
%s37 = alloca i32, i32 0
%s38 = alloca i32, i32 0
%s39 = alloca i32, i32 0
%s40 = alloca i32, i32 0
%s41 = alloca i32, i32 0
%s42 = alloca i32, i32 0
%s43 = alloca i32, i32 0
%s44 = alloca i32, i32 0
%s45 = alloca i32, i32 0
%s46 = alloca i32, i32 0
%s47 = alloca i32, i32 0
%s48 = alloca i32, i32 0
%s49 = alloca i32, i32 0
ret i32 1
ret i32 0
}

define i32 @False() {
%s0 = alloca i32, i32 0
%s1 = alloca i32, i32 0
%s2 = alloca i32, i32 0
%s3 = alloca i32, i32 0
%s4 = alloca i32, i32 0
%s5 = alloca i32, i32 0
%s6 = alloca i32, i32 0
%s7 = alloca i32, i32 0
%s8 = alloca i32, i32 0
%s9 = alloca i32, i32 0
%s10 = alloca i32, i32 0
%s11 = alloca i32, i32 0
%s12 = alloca i32, i32 0
%s13 = alloca i32, i32 0
%s14 = alloca i32, i32 0
%s15 = alloca i32, i32 0
%s16 = alloca i32, i32 0
%s17 = alloca i32, i32 0
%s18 = alloca i32, i32 0
%s19 = alloca i32, i32 0
%s20 = alloca i32, i32 0
%s21 = alloca i32, i32 0
%s22 = alloca i32, i32 0
%s23 = alloca i32, i32 0
%s24 = alloca i32, i32 0
%s25 = alloca i32, i32 0
%s26 = alloca i32, i32 0
%s27 = alloca i32, i32 0
%s28 = alloca i32, i32 0
%s29 = alloca i32, i32 0
%s30 = alloca i32, i32 0
%s31 = alloca i32, i32 0
%s32 = alloca i32, i32 0
%s33 = alloca i32, i32 0
%s34 = alloca i32, i32 0
%s35 = alloca i32, i32 0
%s36 = alloca i32, i32 0
%s37 = alloca i32, i32 0
%s38 = alloca i32, i32 0
%s39 = alloca i32, i32 0
%s40 = alloca i32, i32 0
%s41 = alloca i32, i32 0
%s42 = alloca i32, i32 0
%s43 = alloca i32, i32 0
%s44 = alloca i32, i32 0
%s45 = alloca i32, i32 0
%s46 = alloca i32, i32 0
%s47 = alloca i32, i32 0
%s48 = alloca i32, i32 0
%s49 = alloca i32, i32 0
ret i32 0
ret i32 0
}

define void @main() {
%s0 = alloca i32, i32 0
%s1 = alloca i32, i32 0
%s2 = alloca i32, i32 0
%s3 = alloca i32, i32 0
%s4 = alloca i32, i32 0
%s5 = alloca i32, i32 0
%s6 = alloca i32, i32 0
%s7 = alloca i32, i32 0
%s8 = alloca i32, i32 0
%s9 = alloca i32, i32 0
%s10 = alloca i32, i32 0
%s11 = alloca i32, i32 0
%s12 = alloca i32, i32 0
%s13 = alloca i32, i32 0
%s14 = alloca i32, i32 0
%s15 = alloca i32, i32 0
%s16 = alloca i32, i32 0
%s17 = alloca i32, i32 0
%s18 = alloca i32, i32 0
%s19 = alloca i32, i32 0
%s20 = alloca i32, i32 0
%s21 = alloca i32, i32 0
%s22 = alloca i32, i32 0
%s23 = alloca i32, i32 0
%s24 = alloca i32, i32 0
%s25 = alloca i32, i32 0
%s26 = alloca i32, i32 0
%s27 = alloca i32, i32 0
%s28 = alloca i32, i32 0
%s29 = alloca i32, i32 0
%s30 = alloca i32, i32 0
%s31 = alloca i32, i32 0
%s32 = alloca i32, i32 0
%s33 = alloca i32, i32 0
%s34 = alloca i32, i32 0
%s35 = alloca i32, i32 0
%s36 = alloca i32, i32 0
%s37 = alloca i32, i32 0
%s38 = alloca i32, i32 0
%s39 = alloca i32, i32 0
%s40 = alloca i32, i32 0
%s41 = alloca i32, i32 0
%s42 = alloca i32, i32 0
%s43 = alloca i32, i32 0
%s44 = alloca i32, i32 0
%s45 = alloca i32, i32 0
%s46 = alloca i32, i32 0
%s47 = alloca i32, i32 0
%s48 = alloca i32, i32 0
%s49 = alloca i32, i32 0
%t_2 = add i32 0, 1
store i32 %t_2, i32* %s0
%t_3 = add i32 0, 0
store i32 %t_3, i32* %s1
br label %label_230
label_227:
%t_4 = icmp ne i32 4, 4
%t_5 = zext i1 %t_4 to i32
br label %label_234
label_230:
%t_6 = icmp ne i32 0, 0
br i1 %t_6, label %label_237, label %label_227
br label %label_234
label_234:
%t_7 = icmp ne i32 %t_5, 0
%t_8 = zext i1 %t_7 to i32
br label %label_237
label_237:
%t_9 = phi i32 [1, %label_230], [%t_8, %label_234]
%t_10 = add i32 0, %t_9
store i32 %t_10, i32* %s2
%t_11 = load i32, i32* %s2
call void @printBool(i32 %t_11)
br label %label_247
label_244:
%t_12 = call i32 @False()
br label %label_252
label_247:
%t_14 = load i32, i32* %s1
%t_13 = icmp ne i32 %t_14, 0
br i1 %t_13, label %label_255, label %label_244
br label %label_252
label_252:
%t_15 = icmp ne i32 %t_12, 0
%t_16 = zext i1 %t_15 to i32
br label %label_255
label_255:
%t_17 = phi i32 [1, %label_247], [%t_16, %label_252]
%t_18 = add i32 0, %t_17
store i32 %t_18, i32* %s3
%t_19 = load i32, i32* %s3
call void @printBool(i32 %t_19)
br label %label_264
label_262:
br label %label_269
label_264:
%t_21 = load i32, i32* %s1
%t_20 = icmp ne i32 %t_21, 0
br i1 %t_20, label %label_272, label %label_262
br label %label_269
label_269:
%t_22 = icmp ne i32 0, 0
%t_23 = zext i1 %t_22 to i32
br label %label_272
label_272:
%t_24 = phi i32 [1, %label_264], [%t_23, %label_269]
%t_25 = add i32 0, %t_24
store i32 %t_25, i32* %s4
%t_26 = load i32, i32* %s4
call void @printBool(i32 %t_26)
br label %label_281
label_279:
br label %label_286
label_281:
%t_28 = load i32, i32* %s1
%t_27 = icmp ne i32 %t_28, 0
br i1 %t_27, label %label_290, label %label_279
br label %label_286
label_286:
%t_31 = load i32, i32* %s1
%t_29 = icmp ne i32 %t_31, 0
%t_30 = zext i1 %t_29 to i32
br label %label_290
label_290:
%t_32 = phi i32 [1, %label_281], [%t_30, %label_286]
%t_33 = add i32 0, %t_32
store i32 %t_33, i32* %s5
%t_34 = load i32, i32* %s5
call void @printBool(i32 %t_34)
br label %label_300
label_297:
%t_35 = icmp sgt i32 4, 5
%t_36 = zext i1 %t_35 to i32
br label %label_305
label_300:
%t_38 = load i32, i32* %s1
%t_37 = icmp ne i32 %t_38, 0
br i1 %t_37, label %label_308, label %label_297
br label %label_305
label_305:
%t_39 = icmp ne i32 %t_36, 0
%t_40 = zext i1 %t_39 to i32
br label %label_308
label_308:
%t_41 = phi i32 [1, %label_300], [%t_40, %label_305]
%t_42 = add i32 0, %t_41
store i32 %t_42, i32* %s6
%t_43 = load i32, i32* %s6
call void @printBool(i32 %t_43)
br label %label_318
label_315:
%t_44 = icmp ne i32 4, 4
%t_45 = zext i1 %t_44 to i32
br label %label_323
label_318:
%t_47 = load i32, i32* %s1
%t_46 = icmp ne i32 %t_47, 0
br i1 %t_46, label %label_326, label %label_315
br label %label_323
label_323:
%t_48 = icmp ne i32 %t_45, 0
%t_49 = zext i1 %t_48 to i32
br label %label_326
label_326:
%t_50 = phi i32 [1, %label_318], [%t_49, %label_323]
%t_51 = add i32 0, %t_50
store i32 %t_51, i32* %s7
%t_52 = load i32, i32* %s7
call void @printBool(i32 %t_52)
%t_53 = icmp sgt i32 4, 5
%t_54 = zext i1 %t_53 to i32
br label %label_337
label_334:
%t_55 = call i32 @False()
br label %label_341
label_337:
%t_56 = icmp ne i32 %t_54, 0
br i1 %t_56, label %label_344, label %label_334
br label %label_341
label_341:
%t_57 = icmp ne i32 %t_55, 0
%t_58 = zext i1 %t_57 to i32
br label %label_344
label_344:
%t_59 = phi i32 [1, %label_337], [%t_58, %label_341]
%t_60 = add i32 0, %t_59
store i32 %t_60, i32* %s8
%t_61 = load i32, i32* %s8
call void @printBool(i32 %t_61)
%t_62 = icmp sgt i32 4, 5
%t_63 = zext i1 %t_62 to i32
br label %label_354
label_352:
br label %label_358
label_354:
%t_64 = icmp ne i32 %t_63, 0
br i1 %t_64, label %label_361, label %label_352
br label %label_358
label_358:
%t_65 = icmp ne i32 0, 0
%t_66 = zext i1 %t_65 to i32
br label %label_361
label_361:
%t_67 = phi i32 [1, %label_354], [%t_66, %label_358]
%t_68 = add i32 0, %t_67
store i32 %t_68, i32* %s9
%t_69 = load i32, i32* %s9
call void @printBool(i32 %t_69)
%t_70 = icmp sgt i32 4, 5
%t_71 = zext i1 %t_70 to i32
br label %label_371
label_369:
br label %label_375
label_371:
%t_72 = icmp ne i32 %t_71, 0
br i1 %t_72, label %label_379, label %label_369
br label %label_375
label_375:
%t_75 = load i32, i32* %s1
%t_73 = icmp ne i32 %t_75, 0
%t_74 = zext i1 %t_73 to i32
br label %label_379
label_379:
%t_76 = phi i32 [1, %label_371], [%t_74, %label_375]
%t_77 = add i32 0, %t_76
store i32 %t_77, i32* %s10
%t_78 = load i32, i32* %s10
call void @printBool(i32 %t_78)
%t_79 = icmp sgt i32 4, 5
%t_80 = zext i1 %t_79 to i32
br label %label_390
label_387:
%t_81 = icmp sgt i32 4, 5
%t_82 = zext i1 %t_81 to i32
br label %label_394
label_390:
%t_83 = icmp ne i32 %t_80, 0
br i1 %t_83, label %label_397, label %label_387
br label %label_394
label_394:
%t_84 = icmp ne i32 %t_82, 0
%t_85 = zext i1 %t_84 to i32
br label %label_397
label_397:
%t_86 = phi i32 [1, %label_390], [%t_85, %label_394]
%t_87 = add i32 0, %t_86
store i32 %t_87, i32* %s11
%t_88 = load i32, i32* %s11
call void @printBool(i32 %t_88)
%t_89 = icmp sgt i32 4, 5
%t_90 = zext i1 %t_89 to i32
br label %label_408
label_405:
%t_91 = icmp ne i32 4, 4
%t_92 = zext i1 %t_91 to i32
br label %label_412
label_408:
%t_93 = icmp ne i32 %t_90, 0
br i1 %t_93, label %label_415, label %label_405
br label %label_412
label_412:
%t_94 = icmp ne i32 %t_92, 0
%t_95 = zext i1 %t_94 to i32
br label %label_415
label_415:
%t_96 = phi i32 [1, %label_408], [%t_95, %label_412]
%t_97 = add i32 0, %t_96
store i32 %t_97, i32* %s12
%t_98 = load i32, i32* %s12
call void @printBool(i32 %t_98)
%t_99 = icmp ne i32 4, 4
%t_100 = zext i1 %t_99 to i32
br label %label_426
label_423:
%t_101 = call i32 @False()
br label %label_430
label_426:
%t_102 = icmp ne i32 %t_100, 0
br i1 %t_102, label %label_433, label %label_423
br label %label_430
label_430:
%t_103 = icmp ne i32 %t_101, 0
%t_104 = zext i1 %t_103 to i32
br label %label_433
label_433:
%t_105 = phi i32 [1, %label_426], [%t_104, %label_430]
%t_106 = add i32 0, %t_105
store i32 %t_106, i32* %s13
%t_107 = load i32, i32* %s13
call void @printBool(i32 %t_107)
%t_108 = icmp ne i32 4, 4
%t_109 = zext i1 %t_108 to i32
br label %label_443
label_441:
br label %label_447
label_443:
%t_110 = icmp ne i32 %t_109, 0
br i1 %t_110, label %label_450, label %label_441
br label %label_447
label_447:
%t_111 = icmp ne i32 0, 0
%t_112 = zext i1 %t_111 to i32
br label %label_450
label_450:
%t_113 = phi i32 [1, %label_443], [%t_112, %label_447]
%t_114 = add i32 0, %t_113
store i32 %t_114, i32* %s14
%t_115 = load i32, i32* %s14
call void @printBool(i32 %t_115)
%t_116 = icmp ne i32 4, 4
%t_117 = zext i1 %t_116 to i32
br label %label_460
label_458:
br label %label_464
label_460:
%t_118 = icmp ne i32 %t_117, 0
br i1 %t_118, label %label_468, label %label_458
br label %label_464
label_464:
%t_121 = load i32, i32* %s1
%t_119 = icmp ne i32 %t_121, 0
%t_120 = zext i1 %t_119 to i32
br label %label_468
label_468:
%t_122 = phi i32 [1, %label_460], [%t_120, %label_464]
%t_123 = add i32 0, %t_122
store i32 %t_123, i32* %s15
%t_124 = load i32, i32* %s15
call void @printBool(i32 %t_124)
%t_125 = icmp ne i32 4, 4
%t_126 = zext i1 %t_125 to i32
br label %label_479
label_476:
%t_127 = icmp sgt i32 4, 5
%t_128 = zext i1 %t_127 to i32
br label %label_483
label_479:
%t_129 = icmp ne i32 %t_126, 0
br i1 %t_129, label %label_486, label %label_476
br label %label_483
label_483:
%t_130 = icmp ne i32 %t_128, 0
%t_131 = zext i1 %t_130 to i32
br label %label_486
label_486:
%t_132 = phi i32 [1, %label_479], [%t_131, %label_483]
%t_133 = add i32 0, %t_132
store i32 %t_133, i32* %s16
%t_134 = load i32, i32* %s16
call void @printBool(i32 %t_134)
%t_135 = icmp ne i32 4, 4
%t_136 = zext i1 %t_135 to i32
br label %label_497
label_494:
%t_137 = icmp ne i32 4, 4
%t_138 = zext i1 %t_137 to i32
br label %label_501
label_497:
%t_139 = icmp ne i32 %t_136, 0
br i1 %t_139, label %label_504, label %label_494
br label %label_501
label_501:
%t_140 = icmp ne i32 %t_138, 0
%t_141 = zext i1 %t_140 to i32
br label %label_504
label_504:
%t_142 = phi i32 [1, %label_497], [%t_141, %label_501]
%t_143 = add i32 0, %t_142
store i32 %t_143, i32* %s17
%t_144 = load i32, i32* %s17
call void @printBool(i32 %t_144)
ret void
}

