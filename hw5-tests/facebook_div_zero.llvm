declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
@.zerodiverrorstring  = constant [23 x i8] c"Error division by zero\00"

define void @printi(i32) {
%spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
ret void
}

define void @print(i8*) {
%spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
ret void
}

define void @checkDiv(i32) {
%divcmp = icmp eq i32 %0, 0
br i1 %divcmp, label %EqualZero, label %notEqualZero
EqualZero:
%div_error_str = getelementptr [23 x i8], [23 x i8]* @.zerodiverrorstring, i32 0, i32 0
call void @print(i8* %div_error_str)
call void @exit(i32 -1)
ret void
notEqualZero:
ret void
}

@.w0 = constant [18 x i8]c"This should print\00"
@.w1 = constant [21 x i8]c"This shouldn't print\00"
define i32 @f() {
%s0 = alloca i32, i32 0
%s1 = alloca i32, i32 0
%s2 = alloca i32, i32 0
%s3 = alloca i32, i32 0
%s4 = alloca i32, i32 0
%s5 = alloca i32, i32 0
%s6 = alloca i32, i32 0
%s7 = alloca i32, i32 0
%s8 = alloca i32, i32 0
%s9 = alloca i32, i32 0
%s10 = alloca i32, i32 0
%s11 = alloca i32, i32 0
%s12 = alloca i32, i32 0
%s13 = alloca i32, i32 0
%s14 = alloca i32, i32 0
%s15 = alloca i32, i32 0
%s16 = alloca i32, i32 0
%s17 = alloca i32, i32 0
%s18 = alloca i32, i32 0
%s19 = alloca i32, i32 0
%s20 = alloca i32, i32 0
%s21 = alloca i32, i32 0
%s22 = alloca i32, i32 0
%s23 = alloca i32, i32 0
%s24 = alloca i32, i32 0
%s25 = alloca i32, i32 0
%s26 = alloca i32, i32 0
%s27 = alloca i32, i32 0
%s28 = alloca i32, i32 0
%s29 = alloca i32, i32 0
%s30 = alloca i32, i32 0
%s31 = alloca i32, i32 0
%s32 = alloca i32, i32 0
%s33 = alloca i32, i32 0
%s34 = alloca i32, i32 0
%s35 = alloca i32, i32 0
%s36 = alloca i32, i32 0
%s37 = alloca i32, i32 0
%s38 = alloca i32, i32 0
%s39 = alloca i32, i32 0
%s40 = alloca i32, i32 0
%s41 = alloca i32, i32 0
%s42 = alloca i32, i32 0
%s43 = alloca i32, i32 0
%s44 = alloca i32, i32 0
%s45 = alloca i32, i32 0
%s46 = alloca i32, i32 0
%s47 = alloca i32, i32 0
%s48 = alloca i32, i32 0
%s49 = alloca i32, i32 0
br label %label_56
label_52:
%t_1 = icmp slt i32 1, 0
%t_2 = zext i1 %t_1 to i32
%t_3 = sub i32 1, %t_2
br label %label_60
label_56:
%t_4 = icmp eq i32 1, 0
br i1 %t_4, label %label_63, label %label_52
br label %label_60
label_60:
%t_5 = icmp ne i32 %t_3, 0
%t_6 = zext i1 %t_5 to i32
br label %label_63
label_63:
%t_7 = phi i32 [0, %label_56], [%t_6, %label_60]
ret i32 %t_7
ret i32 0
}

define void @main() {
%s0 = alloca i32, i32 0
%s1 = alloca i32, i32 0
%s2 = alloca i32, i32 0
%s3 = alloca i32, i32 0
%s4 = alloca i32, i32 0
%s5 = alloca i32, i32 0
%s6 = alloca i32, i32 0
%s7 = alloca i32, i32 0
%s8 = alloca i32, i32 0
%s9 = alloca i32, i32 0
%s10 = alloca i32, i32 0
%s11 = alloca i32, i32 0
%s12 = alloca i32, i32 0
%s13 = alloca i32, i32 0
%s14 = alloca i32, i32 0
%s15 = alloca i32, i32 0
%s16 = alloca i32, i32 0
%s17 = alloca i32, i32 0
%s18 = alloca i32, i32 0
%s19 = alloca i32, i32 0
%s20 = alloca i32, i32 0
%s21 = alloca i32, i32 0
%s22 = alloca i32, i32 0
%s23 = alloca i32, i32 0
%s24 = alloca i32, i32 0
%s25 = alloca i32, i32 0
%s26 = alloca i32, i32 0
%s27 = alloca i32, i32 0
%s28 = alloca i32, i32 0
%s29 = alloca i32, i32 0
%s30 = alloca i32, i32 0
%s31 = alloca i32, i32 0
%s32 = alloca i32, i32 0
%s33 = alloca i32, i32 0
%s34 = alloca i32, i32 0
%s35 = alloca i32, i32 0
%s36 = alloca i32, i32 0
%s37 = alloca i32, i32 0
%s38 = alloca i32, i32 0
%s39 = alloca i32, i32 0
%s40 = alloca i32, i32 0
%s41 = alloca i32, i32 0
%s42 = alloca i32, i32 0
%s43 = alloca i32, i32 0
%s44 = alloca i32, i32 0
%s45 = alloca i32, i32 0
%s46 = alloca i32, i32 0
%s47 = alloca i32, i32 0
%s48 = alloca i32, i32 0
%s49 = alloca i32, i32 0
%t_8 = call i32 @f()
br label %label_125
label_121:
call void @checkDiv(i32 0)
%t_9 = sdiv i32 5, 0

%t_10 = icmp eq i32 %t_9, 1
%t_11 = zext i1 %t_10 to i32
br label %label_129
label_125:
%t_12 = icmp ne i32 %t_8, 0
br i1 %t_12, label %label_132, label %label_121
br label %label_129
label_129:
%t_13 = icmp ne i32 %t_11, 0
%t_14 = zext i1 %t_13 to i32
br label %label_132
label_132:
%t_15 = phi i32 [1, %label_125], [%t_14, %label_129]
%t_16 = icmp ne i32 0, %t_15
br i1 %t_16, label %label_136, label %label_139
label_136:
%w0 = getelementptr [18 x i8], [18 x i8]* @.w0, i32 0, i32 0
call void @print(i8* %w0)
br label %label_139
label_139:
%t_17 = trunc i32 0 to i8
%t_18 = zext i8 %t_17 to i32
store i32 %t_18, i32* %s0
%t_19 = load i32, i32* %s0
call void @checkDiv(i32 %t_19)
%t_20 = sdiv i32 5, %t_19

%t_21 = icmp eq i32 %t_20, 1
%t_22 = zext i1 %t_21 to i32
br label %label_149
label_146:
%t_23 = call i32 @f()
br label %label_153
label_149:
%t_24 = icmp ne i32 %t_22, 0
br i1 %t_24, label %label_156, label %label_146
br label %label_153
label_153:
%t_25 = icmp ne i32 %t_23, 0
%t_26 = zext i1 %t_25 to i32
br label %label_156
label_156:
%t_27 = phi i32 [1, %label_149], [%t_26, %label_153]
%t_28 = icmp ne i32 0, %t_27
br i1 %t_28, label %label_160, label %label_163
label_160:
%w1 = getelementptr [21 x i8], [21 x i8]* @.w1, i32 0, i32 0
call void @print(i8* %w1)
br label %label_163
label_163:
ret void
}

