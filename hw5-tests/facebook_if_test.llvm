declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
@.zerodiverrorstring  = constant [23 x i8] c"Error division by zero\00"

define void @printi(i32) {
%spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
ret void
}

define void @print(i8*) {
%spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
ret void
}

define void @checkDiv(i32) {
%divcmp = icmp eq i32 %0, 0
br i1 %divcmp, label %EqualZero, label %notEqualZero
EqualZero:
%div_error_str = getelementptr [23 x i8], [23 x i8]* @.zerodiverrorstring, i32 0, i32 0
call void @print(i8* %div_error_str)
call void @exit(i32 -1)
ret void
notEqualZero:
ret void
}

@.w0 = constant [4 x i8]c"jg=\00"
@.w1 = constant [4 x i8]c"2a=\00"
define void @main() {
%s0 = alloca i32, i32 0
%s1 = alloca i32, i32 0
%s2 = alloca i32, i32 0
%s3 = alloca i32, i32 0
%s4 = alloca i32, i32 0
%s5 = alloca i32, i32 0
%s6 = alloca i32, i32 0
%s7 = alloca i32, i32 0
%s8 = alloca i32, i32 0
%s9 = alloca i32, i32 0
%s10 = alloca i32, i32 0
%s11 = alloca i32, i32 0
%s12 = alloca i32, i32 0
%s13 = alloca i32, i32 0
%s14 = alloca i32, i32 0
%s15 = alloca i32, i32 0
%s16 = alloca i32, i32 0
%s17 = alloca i32, i32 0
%s18 = alloca i32, i32 0
%s19 = alloca i32, i32 0
%s20 = alloca i32, i32 0
%s21 = alloca i32, i32 0
%s22 = alloca i32, i32 0
%s23 = alloca i32, i32 0
%s24 = alloca i32, i32 0
%s25 = alloca i32, i32 0
%s26 = alloca i32, i32 0
%s27 = alloca i32, i32 0
%s28 = alloca i32, i32 0
%s29 = alloca i32, i32 0
%s30 = alloca i32, i32 0
%s31 = alloca i32, i32 0
%s32 = alloca i32, i32 0
%s33 = alloca i32, i32 0
%s34 = alloca i32, i32 0
%s35 = alloca i32, i32 0
%s36 = alloca i32, i32 0
%s37 = alloca i32, i32 0
%s38 = alloca i32, i32 0
%s39 = alloca i32, i32 0
%s40 = alloca i32, i32 0
%s41 = alloca i32, i32 0
%s42 = alloca i32, i32 0
%s43 = alloca i32, i32 0
%s44 = alloca i32, i32 0
%s45 = alloca i32, i32 0
%s46 = alloca i32, i32 0
%s47 = alloca i32, i32 0
%s48 = alloca i32, i32 0
%s49 = alloca i32, i32 0
%t_1 = add i32 50, 0
store i32 %t_1, i32* %s0
%t_2 = add i32 17, 0
store i32 %t_2, i32* %s1
%t_3 = load i32, i32* %s1
%t_4 = load i32, i32* %s0
%t_5 = icmp sgt i32 %t_3, %t_4
%t_6 = zext i1 %t_5 to i32
br label %label_63
label_59:
%t_7 = load i32, i32* %s1
%t_8 = icmp sgt i32 %t_7, 10
%t_9 = zext i1 %t_8 to i32
br label %label_67
label_63:
%t_10 = icmp eq i32 %t_6, 0
br i1 %t_10, label %label_70, label %label_59
br label %label_67
label_67:
%t_11 = icmp ne i32 %t_9, 0
%t_12 = zext i1 %t_11 to i32
br label %label_70
label_70:
%t_13 = phi i32 [0, %label_63], [%t_12, %label_67]
%t_14 = icmp ne i32 0, %t_13
br i1 %t_14, label %label_74, label %label_80
label_74:
%w0 = getelementptr [4 x i8], [4 x i8]* @.w0, i32 0, i32 0
call void @print(i8* %w0)
%t_15 = load i32, i32* %s1
call void @printi(i32 %t_15)
br label %label_86
br label %label_80
label_80:
%w1 = getelementptr [4 x i8], [4 x i8]* @.w1, i32 0, i32 0
call void @print(i8* %w1)
%t_16 = load i32, i32* %s0
%t_17 = mul i32 2, %t_16

call void @printi(i32 %t_17)
br label %label_86
label_86:
ret void
}

