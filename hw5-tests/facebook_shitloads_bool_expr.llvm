==RELOPLEFT==
==id==
==id==
==bondar==
hiiiiiiiiiiiiii
this is first exp type: INT
this is second exp type: INT
==RELOPLEFT==
==id==
==num b==
==bondar==
hiiiiiiiiiiiiii
this is first exp type: INT
this is second exp type: BYTE
==and==
==func decl==
==RELOPLEFT==
==id==
==num==
==bondar==
hiiiiiiiiiiiiii
this is first exp type: INT
this is second exp type: INT
==id==
==and==
==RELOPLEFT==
==id==
==num==
==bondar==
hiiiiiiiiiiiiii
this is first exp type: INT
this is second exp type: INT
==id==
==not==
==and==
==OR==
==start OR==
==end OR==
==func decl==
==num==
==num==
+++++%t_26+++++
==call==
==call EXP==
==id==
==string==
++++++++++
==if statement==
==num==
==id==
+++++%t_31+++++
==call==
==call EXP==
==id==
==not==
==string==
++++++++++
==if statement==
==id==
==id==
==and==
==id==
==not==
==string==
++++++++++
==if statement==
==num==
==num==
+++++%t_46+++++
==call==
==call EXP==
==num==
==num==
==num==
+++++%t_47+++++
==call==
==call EXP==
+++++%t_48+++++
==call==
==call EXP==
==OR==
==start OR==
==end OR==
==id==
==not==
==string==
++++++++++
==if statement==
==id==
==id==
==and==
==id==
==id==
==and==
==and==
==id==
==not==
==OR==
==start OR==
==end OR==
==string==
++++++++++
==string==
++++++++++
==num==
==num==
+++++%t_80+++++
==call==
==call EXP==
==num==
==id==
==id==
==OR==
==start OR==
==end OR==
+++++%t_87+++++
==call==
==call EXP==
==and==
==string==
++++++++++
==string==
++++++++++
==id==
==id==
==and==
==id==
==and==
==id==
==and==
==num==
==num==
+++++%t_109+++++
==call==
==call EXP==
==and==
==num==
==false==
+++++%t_114+++++
==call==
==call EXP==
==and==
==string==
++++++++++
==string==
++++++++++
==func decl==
==end of program==
declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
@.zerodiverrorstring  = constant [23 x i8] c"Error division by zero\00"

define void @printi(i32) {
%spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
ret void
}

define void @print(i8*) {
%spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
ret void
}

define void @checkDiv(i32) {
%divcmp = icmp eq i32 %0, 0
br i1 %divcmp, label %EqualZero, label %notEqualZero
EqualZero:
%div_error_str = getelementptr [23 x i8], [23 x i8]* @.zerodiverrorstring, i32 0, i32 0
call void @print(i8* %div_error_str)
call void @exit(i32 -1)
ret void
notEqualZero:
ret void
}

@.w0 = constant [11 x i8]c"b1 is true\00"
@.w1 = constant [12 x i8]c"b2 is false\00"
@.w2 = constant [12 x i8]c"b3 is false\00"
@.w3 = constant [21 x i8]c"b3 is false after b4\00"
@.w4 = constant [9 x i8]c"First If\00"
@.w5 = constant [11 x i8]c"First Else\00"
@.w6 = constant [10 x i8]c"Second If\00"
@.w7 = constant [12 x i8]c"Second Else\00"
@.w8 = constant [9 x i8]c"Third If\00"
@.w9 = constant [11 x i8]c"Third Else\00"
define i32 @f(i32, i32) {
%s0 = alloca i32, i32 0
%s1 = alloca i32, i32 0
%s2 = alloca i32, i32 0
%s3 = alloca i32, i32 0
%s4 = alloca i32, i32 0
%s5 = alloca i32, i32 0
%s6 = alloca i32, i32 0
%s7 = alloca i32, i32 0
%s8 = alloca i32, i32 0
%s9 = alloca i32, i32 0
%s10 = alloca i32, i32 0
%s11 = alloca i32, i32 0
%s12 = alloca i32, i32 0
%s13 = alloca i32, i32 0
%s14 = alloca i32, i32 0
%s15 = alloca i32, i32 0
%s16 = alloca i32, i32 0
%s17 = alloca i32, i32 0
%s18 = alloca i32, i32 0
%s19 = alloca i32, i32 0
%s20 = alloca i32, i32 0
%s21 = alloca i32, i32 0
%s22 = alloca i32, i32 0
%s23 = alloca i32, i32 0
%s24 = alloca i32, i32 0
%s25 = alloca i32, i32 0
%s26 = alloca i32, i32 0
%s27 = alloca i32, i32 0
%s28 = alloca i32, i32 0
%s29 = alloca i32, i32 0
%s30 = alloca i32, i32 0
%s31 = alloca i32, i32 0
%s32 = alloca i32, i32 0
%s33 = alloca i32, i32 0
%s34 = alloca i32, i32 0
%s35 = alloca i32, i32 0
%s36 = alloca i32, i32 0
%s37 = alloca i32, i32 0
%s38 = alloca i32, i32 0
%s39 = alloca i32, i32 0
%s40 = alloca i32, i32 0
%s41 = alloca i32, i32 0
%s42 = alloca i32, i32 0
%s43 = alloca i32, i32 0
%s44 = alloca i32, i32 0
%s45 = alloca i32, i32 0
%s46 = alloca i32, i32 0
%s47 = alloca i32, i32 0
%s48 = alloca i32, i32 0
%s49 = alloca i32, i32 0
%t_1 = icmp sgt i32 %0, %1
%t_2 = zext i1 %t_1 to i32
br label %label_56
label_53:
%t_3 = icmp slt i32 %1, 100
%t_4 = zext i1 %t_3 to i32
br label %label_60
label_56:
%t_5 = icmp eq i32 %t_2, 0
br i1 %t_5, label %label_63, label %label_53
br label %label_60
label_60:
%t_6 = icmp ne i32 %t_4, 0
%t_7 = zext i1 %t_6 to i32
br label %label_63
label_63:
%t_8 = phi i32 [0, %label_56], [%t_7, %label_60]
ret i32 %t_8
ret i32 0
}

define i32 @g(i32, i32) {
%s0 = alloca i32, i32 0
%s1 = alloca i32, i32 0
%s2 = alloca i32, i32 0
%s3 = alloca i32, i32 0
%s4 = alloca i32, i32 0
%s5 = alloca i32, i32 0
%s6 = alloca i32, i32 0
%s7 = alloca i32, i32 0
%s8 = alloca i32, i32 0
%s9 = alloca i32, i32 0
%s10 = alloca i32, i32 0
%s11 = alloca i32, i32 0
%s12 = alloca i32, i32 0
%s13 = alloca i32, i32 0
%s14 = alloca i32, i32 0
%s15 = alloca i32, i32 0
%s16 = alloca i32, i32 0
%s17 = alloca i32, i32 0
%s18 = alloca i32, i32 0
%s19 = alloca i32, i32 0
%s20 = alloca i32, i32 0
%s21 = alloca i32, i32 0
%s22 = alloca i32, i32 0
%s23 = alloca i32, i32 0
%s24 = alloca i32, i32 0
%s25 = alloca i32, i32 0
%s26 = alloca i32, i32 0
%s27 = alloca i32, i32 0
%s28 = alloca i32, i32 0
%s29 = alloca i32, i32 0
%s30 = alloca i32, i32 0
%s31 = alloca i32, i32 0
%s32 = alloca i32, i32 0
%s33 = alloca i32, i32 0
%s34 = alloca i32, i32 0
%s35 = alloca i32, i32 0
%s36 = alloca i32, i32 0
%s37 = alloca i32, i32 0
%s38 = alloca i32, i32 0
%s39 = alloca i32, i32 0
%s40 = alloca i32, i32 0
%s41 = alloca i32, i32 0
%s42 = alloca i32, i32 0
%s43 = alloca i32, i32 0
%s44 = alloca i32, i32 0
%s45 = alloca i32, i32 0
%s46 = alloca i32, i32 0
%s47 = alloca i32, i32 0
%s48 = alloca i32, i32 0
%s49 = alloca i32, i32 0
%t_9 = icmp sgt i32 %0, 10
%t_10 = zext i1 %t_9 to i32
br label %label_123
label_121:
br label %label_127
label_123:
%t_11 = icmp eq i32 %t_10, 0
br i1 %t_11, label %label_130, label %label_121
br label %label_127
label_127:
%t_12 = icmp ne i32 %1, 0
%t_13 = zext i1 %t_12 to i32
br label %label_130
label_130:
%t_14 = phi i32 [0, %label_123], [%t_13, %label_127]
br label %label_149
label_133:
%t_15 = icmp sle i32 %0, 10
%t_16 = zext i1 %t_15 to i32
br label %label_139
label_136:
%t_17 = sub i32 1, %1
br label %label_143
label_139:
%t_18 = icmp eq i32 %t_16, 0
br i1 %t_18, label %label_146, label %label_136
br label %label_143
label_143:
%t_19 = icmp ne i32 %t_17, 0
%t_20 = zext i1 %t_19 to i32
br label %label_146
label_146:
%t_21 = phi i32 [0, %label_139], [%t_20, %label_143]
br label %label_153
label_149:
%t_22 = icmp ne i32 %t_14, 0
br i1 %t_22, label %label_156, label %label_133
br label %label_153
label_153:
%t_23 = icmp ne i32 %t_21, 0
%t_24 = zext i1 %t_23 to i32
br label %label_156
label_156:
%t_25 = phi i32 [1, %label_149], [%t_24, %label_153]
ret i32 %t_25
ret i32 0
}

define void @main() {
%s0 = alloca i32, i32 0
%s1 = alloca i32, i32 0
%s2 = alloca i32, i32 0
%s3 = alloca i32, i32 0
%s4 = alloca i32, i32 0
%s5 = alloca i32, i32 0
%s6 = alloca i32, i32 0
%s7 = alloca i32, i32 0
%s8 = alloca i32, i32 0
%s9 = alloca i32, i32 0
%s10 = alloca i32, i32 0
%s11 = alloca i32, i32 0
%s12 = alloca i32, i32 0
%s13 = alloca i32, i32 0
%s14 = alloca i32, i32 0
%s15 = alloca i32, i32 0
%s16 = alloca i32, i32 0
%s17 = alloca i32, i32 0
%s18 = alloca i32, i32 0
%s19 = alloca i32, i32 0
%s20 = alloca i32, i32 0
%s21 = alloca i32, i32 0
%s22 = alloca i32, i32 0
%s23 = alloca i32, i32 0
%s24 = alloca i32, i32 0
%s25 = alloca i32, i32 0
%s26 = alloca i32, i32 0
%s27 = alloca i32, i32 0
%s28 = alloca i32, i32 0
%s29 = alloca i32, i32 0
%s30 = alloca i32, i32 0
%s31 = alloca i32, i32 0
%s32 = alloca i32, i32 0
%s33 = alloca i32, i32 0
%s34 = alloca i32, i32 0
%s35 = alloca i32, i32 0
%s36 = alloca i32, i32 0
%s37 = alloca i32, i32 0
%s38 = alloca i32, i32 0
%s39 = alloca i32, i32 0
%s40 = alloca i32, i32 0
%s41 = alloca i32, i32 0
%s42 = alloca i32, i32 0
%s43 = alloca i32, i32 0
%s44 = alloca i32, i32 0
%s45 = alloca i32, i32 0
%s46 = alloca i32, i32 0
%s47 = alloca i32, i32 0
%s48 = alloca i32, i32 0
%s49 = alloca i32, i32 0
%t_26 = call i32 @f(i32 10, i32 5)
%t_27 = add i32 0, %t_26
store i32 %t_27, i32* %s0
%t_28 = load i32, i32* %s0
%t_29 = icmp ne i32 0, %t_28
br i1 %t_29, label %label_218, label %label_221
label_218:
%w0 = getelementptr [11 x i8], [11 x i8]* @.w0, i32 0, i32 0
call void @print(i8* %w0)
br label %label_221
label_221:
%t_30 = load i32, i32* %s0
%t_31 = call i32 @g(i32 5, i32 %t_30)
%t_32 = add i32 0, %t_31
store i32 %t_32, i32* %s1
%t_33 = load i32, i32* %s1
%t_34 = sub i32 1, %t_33
%t_35 = icmp ne i32 0, %t_34
br i1 %t_35, label %label_230, label %label_233
label_230:
%w1 = getelementptr [12 x i8], [12 x i8]* @.w1, i32 0, i32 0
call void @print(i8* %w1)
br label %label_233
label_233:
br label %label_237
label_235:
br label %label_242
label_237:
%t_37 = load i32, i32* %s0
%t_36 = icmp eq i32 %t_37, 0
br i1 %t_36, label %label_246, label %label_235
br label %label_242
label_242:
%t_40 = load i32, i32* %s1
%t_38 = icmp ne i32 %t_40, 0
%t_39 = zext i1 %t_38 to i32
br label %label_246
label_246:
%t_41 = phi i32 [0, %label_237], [%t_39, %label_242]
%t_42 = add i32 0, %t_41
store i32 %t_42, i32* %s2
%t_43 = load i32, i32* %s2
%t_44 = sub i32 1, %t_43
%t_45 = icmp ne i32 0, %t_44
br i1 %t_45, label %label_254, label %label_257
label_254:
%w2 = getelementptr [12 x i8], [12 x i8]* @.w2, i32 0, i32 0
call void @print(i8* %w2)
br label %label_257
label_257:
%t_46 = call i32 @f(i32 120, i32 110)
br label %label_264
label_260:
%t_47 = call i32 @f(i32 10, i32 6)
%t_48 = call i32 @g(i32 45, i32 %t_47)
br label %label_268
label_264:
%t_49 = icmp ne i32 %t_46, 0
br i1 %t_49, label %label_271, label %label_260
br label %label_268
label_268:
%t_50 = icmp ne i32 %t_48, 0
%t_51 = zext i1 %t_50 to i32
br label %label_271
label_271:
%t_52 = phi i32 [1, %label_264], [%t_51, %label_268]
%t_53 = add i32 0, %t_52
store i32 %t_53, i32* %s3
%t_54 = load i32, i32* %s2
%t_55 = sub i32 1, %t_54
%t_56 = icmp ne i32 0, %t_55
br i1 %t_56, label %label_279, label %label_282
label_279:
%w3 = getelementptr [21 x i8], [21 x i8]* @.w3, i32 0, i32 0
call void @print(i8* %w3)
br label %label_282
label_282:
br label %label_286
label_284:
br label %label_291
label_286:
%t_58 = load i32, i32* %s1
%t_57 = icmp eq i32 %t_58, 0
br i1 %t_57, label %label_295, label %label_284
br label %label_291
label_291:
%t_61 = load i32, i32* %s0
%t_59 = icmp ne i32 %t_61, 0
%t_60 = zext i1 %t_59 to i32
br label %label_295
label_295:
%t_62 = phi i32 [0, %label_286], [%t_60, %label_291]
br label %label_314
label_298:
br label %label_302
label_300:
br label %label_307
label_302:
%t_64 = load i32, i32* %s1
%t_63 = icmp eq i32 %t_64, 0
br i1 %t_63, label %label_311, label %label_300
br label %label_307
label_307:
%t_67 = load i32, i32* %s3
%t_65 = icmp ne i32 %t_67, 0
%t_66 = zext i1 %t_65 to i32
br label %label_311
label_311:
%t_68 = phi i32 [0, %label_302], [%t_66, %label_307]
br label %label_318
label_314:
%t_69 = icmp eq i32 %t_62, 0
br i1 %t_69, label %label_321, label %label_298
br label %label_318
label_318:
%t_70 = icmp ne i32 %t_68, 0
%t_71 = zext i1 %t_70 to i32
br label %label_321
label_321:
%t_72 = phi i32 [0, %label_314], [%t_71, %label_318]
br label %label_328
label_324:
%t_73 = load i32, i32* %s2
%t_74 = sub i32 1, %t_73
br label %label_332
label_328:
%t_75 = icmp ne i32 %t_72, 0
br i1 %t_75, label %label_335, label %label_324
br label %label_332
label_332:
%t_76 = icmp ne i32 %t_74, 0
%t_77 = zext i1 %t_76 to i32
br label %label_335
label_335:
%t_78 = phi i32 [1, %label_328], [%t_77, %label_332]
%t_79 = icmp ne i32 0, %t_78
br i1 %t_79, label %label_339, label %label_343
label_339:
%w4 = getelementptr [9 x i8], [9 x i8]* @.w4, i32 0, i32 0
call void @print(i8* %w4)
br label %label_346
br label %label_343
label_343:
%w5 = getelementptr [11 x i8], [11 x i8]* @.w5, i32 0, i32 0
call void @print(i8* %w5)
br label %label_346
label_346:
%t_80 = call i32 @f(i32 10, i32 6)
br label %label_366
label_349:
br label %label_353
label_351:
br label %label_358
label_353:
%t_82 = load i32, i32* %s0
%t_81 = icmp ne i32 %t_82, 0
br i1 %t_81, label %label_362, label %label_351
br label %label_358
label_358:
%t_85 = load i32, i32* %s1
%t_83 = icmp ne i32 %t_85, 0
%t_84 = zext i1 %t_83 to i32
br label %label_362
label_362:
%t_86 = phi i32 [1, %label_353], [%t_84, %label_358]
%t_87 = call i32 @g(i32 100, i32 %t_86)
br label %label_370
label_366:
%t_88 = icmp eq i32 %t_80, 0
br i1 %t_88, label %label_373, label %label_349
br label %label_370
label_370:
%t_89 = icmp ne i32 %t_87, 0
%t_90 = zext i1 %t_89 to i32
br label %label_373
label_373:
%t_91 = phi i32 [0, %label_366], [%t_90, %label_370]
%t_92 = icmp ne i32 0, %t_91
br i1 %t_92, label %label_377, label %label_381
label_377:
%w6 = getelementptr [10 x i8], [10 x i8]* @.w6, i32 0, i32 0
call void @print(i8* %w6)
br label %label_384
br label %label_381
label_381:
%w7 = getelementptr [12 x i8], [12 x i8]* @.w7, i32 0, i32 0
call void @print(i8* %w7)
br label %label_384
label_384:
br label %label_388
label_386:
br label %label_393
label_388:
%t_94 = load i32, i32* %s0
%t_93 = icmp eq i32 %t_94, 0
br i1 %t_93, label %label_397, label %label_386
br label %label_393
label_393:
%t_97 = load i32, i32* %s1
%t_95 = icmp ne i32 %t_97, 0
%t_96 = zext i1 %t_95 to i32
br label %label_397
label_397:
%t_98 = phi i32 [0, %label_388], [%t_96, %label_393]
br label %label_402
label_400:
br label %label_406
label_402:
%t_99 = icmp eq i32 %t_98, 0
br i1 %t_99, label %label_410, label %label_400
br label %label_406
label_406:
%t_102 = load i32, i32* %s2
%t_100 = icmp ne i32 %t_102, 0
%t_101 = zext i1 %t_100 to i32
br label %label_410
label_410:
%t_103 = phi i32 [0, %label_402], [%t_101, %label_406]
br label %label_415
label_413:
br label %label_419
label_415:
%t_104 = icmp eq i32 %t_103, 0
br i1 %t_104, label %label_423, label %label_413
br label %label_419
label_419:
%t_107 = load i32, i32* %s3
%t_105 = icmp ne i32 %t_107, 0
%t_106 = zext i1 %t_105 to i32
br label %label_423
label_423:
%t_108 = phi i32 [0, %label_415], [%t_106, %label_419]
br label %label_429
label_426:
%t_109 = call i32 @f(i32 10, i32 18)
br label %label_433
label_429:
%t_110 = icmp eq i32 %t_108, 0
br i1 %t_110, label %label_436, label %label_426
br label %label_433
label_433:
%t_111 = icmp ne i32 %t_109, 0
%t_112 = zext i1 %t_111 to i32
br label %label_436
label_436:
%t_113 = phi i32 [0, %label_429], [%t_112, %label_433]
br label %label_442
label_439:
%t_114 = call i32 @g(i32 5, i32 0)
br label %label_446
label_442:
%t_115 = icmp eq i32 %t_113, 0
br i1 %t_115, label %label_449, label %label_439
br label %label_446
label_446:
%t_116 = icmp ne i32 %t_114, 0
%t_117 = zext i1 %t_116 to i32
br label %label_449
label_449:
%t_118 = phi i32 [0, %label_442], [%t_117, %label_446]
%t_119 = icmp ne i32 0, %t_118
br i1 %t_119, label %label_453, label %label_457
label_453:
%w8 = getelementptr [9 x i8], [9 x i8]* @.w8, i32 0, i32 0
call void @print(i8* %w8)
br label %label_460
br label %label_457
label_457:
%w9 = getelementptr [11 x i8], [11 x i8]* @.w9, i32 0, i32 0
call void @print(i8* %w9)
br label %label_460
label_460:
ret void
}

