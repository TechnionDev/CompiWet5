declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
@.zerodiverrorstring  = constant [23 x i8] c"Error division by zero\00"

define void @printi(i32) {
%spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
ret void
}

define void @print(i8*) {
%spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
ret void
}

define void @checkDiv(i32) {
%divcmp = icmp eq i32 %0, 0
br i1 %divcmp, label %EqualZero, label %notEqualZero
EqualZero:
%div_error_str = getelementptr [23 x i8], [23 x i8]* @.zerodiverrorstring, i32 0, i32 0
call void @print(i8* %div_error_str)
call void @exit(i32 -1)
ret void
notEqualZero:
ret void
}

@.w0 = constant [31 x i8]c"Check early exit from while...\00"
@.w1 = constant [26 x i8]c"failed... let's try again\00"
@.w2 = constant [31 x i8]c"Check early exit from while...\00"
@.w3 = constant [26 x i8]c"failed... let's try again\00"
@.w4 = constant [32 x i8]c"check early exit from switch...\00"
@.w5 = constant [8 x i8]c"failed2\00"
@.w6 = constant [8 x i8]c"failed8\00"
@.w7 = constant [32 x i8]c"check early exit from switch...\00"
@.w8 = constant [8 x i8]c"failed2\00"
@.w9 = constant [8 x i8]c"failed8\00"
@.w10 = constant [32 x i8]c"check early exit from switch...\00"
@.w11 = constant [9 x i8]c"failed1b\00"
@.w12 = constant [9 x i8]c"failed7b\00"
@.w13 = constant [32 x i8]c"check early exit from switch...\00"
@.w14 = constant [9 x i8]c"failed1b\00"
@.w15 = constant [9 x i8]c"failed7b\00"
@.w16 = constant [32 x i8]c"check early exit from switch...\00"
@.w17 = constant [9 x i8]c"failed3b\00"
@.w18 = constant [9 x i8]c"failed9b\00"
@.w19 = constant [8 x i8]c"SUCCESS\00"
define void @returnFromWhile() {
%s0 = alloca i32, i32 0
%s1 = alloca i32, i32 0
%s2 = alloca i32, i32 0
%s3 = alloca i32, i32 0
%s4 = alloca i32, i32 0
%s5 = alloca i32, i32 0
%s6 = alloca i32, i32 0
%s7 = alloca i32, i32 0
%s8 = alloca i32, i32 0
%s9 = alloca i32, i32 0
%s10 = alloca i32, i32 0
%s11 = alloca i32, i32 0
%s12 = alloca i32, i32 0
%s13 = alloca i32, i32 0
%s14 = alloca i32, i32 0
%s15 = alloca i32, i32 0
%s16 = alloca i32, i32 0
%s17 = alloca i32, i32 0
%s18 = alloca i32, i32 0
%s19 = alloca i32, i32 0
%s20 = alloca i32, i32 0
%s21 = alloca i32, i32 0
%s22 = alloca i32, i32 0
%s23 = alloca i32, i32 0
%s24 = alloca i32, i32 0
%s25 = alloca i32, i32 0
%s26 = alloca i32, i32 0
%s27 = alloca i32, i32 0
%s28 = alloca i32, i32 0
%s29 = alloca i32, i32 0
%s30 = alloca i32, i32 0
%s31 = alloca i32, i32 0
%s32 = alloca i32, i32 0
%s33 = alloca i32, i32 0
%s34 = alloca i32, i32 0
%s35 = alloca i32, i32 0
%s36 = alloca i32, i32 0
%s37 = alloca i32, i32 0
%s38 = alloca i32, i32 0
%s39 = alloca i32, i32 0
%s40 = alloca i32, i32 0
%s41 = alloca i32, i32 0
%s42 = alloca i32, i32 0
%s43 = alloca i32, i32 0
%s44 = alloca i32, i32 0
%s45 = alloca i32, i32 0
%s46 = alloca i32, i32 0
%s47 = alloca i32, i32 0
%s48 = alloca i32, i32 0
%s49 = alloca i32, i32 0
%t_1 = add i32 0, 0
store i32 %t_1, i32* %s0
br label %label_54
label_54:
%t_2 = load i32, i32* %s0
%t_3 = icmp slt i32 %t_2, 10
%t_4 = zext i1 %t_3 to i32
%t_5 = trunc i32 %t_4 to i1
br i1 %t_5, label %label_58, label %label_67
label_58:
%w0 = getelementptr [31 x i8], [31 x i8]* @.w0, i32 0, i32 0
call void @print(i8* %w0)
ret void
%t_6 = load i32, i32* %s0
%t_7 = add i32 %t_6, 1

%t_8 = add i32 %t_7, 0
store i32 %t_8, i32* %s0
%w1 = getelementptr [26 x i8], [26 x i8]* @.w1, i32 0, i32 0
call void @print(i8* %w1)
br label %label_54
label_67:
ret void
}

define i32 @returnFromWhile2() {
%s0 = alloca i32, i32 0
%s1 = alloca i32, i32 0
%s2 = alloca i32, i32 0
%s3 = alloca i32, i32 0
%s4 = alloca i32, i32 0
%s5 = alloca i32, i32 0
%s6 = alloca i32, i32 0
%s7 = alloca i32, i32 0
%s8 = alloca i32, i32 0
%s9 = alloca i32, i32 0
%s10 = alloca i32, i32 0
%s11 = alloca i32, i32 0
%s12 = alloca i32, i32 0
%s13 = alloca i32, i32 0
%s14 = alloca i32, i32 0
%s15 = alloca i32, i32 0
%s16 = alloca i32, i32 0
%s17 = alloca i32, i32 0
%s18 = alloca i32, i32 0
%s19 = alloca i32, i32 0
%s20 = alloca i32, i32 0
%s21 = alloca i32, i32 0
%s22 = alloca i32, i32 0
%s23 = alloca i32, i32 0
%s24 = alloca i32, i32 0
%s25 = alloca i32, i32 0
%s26 = alloca i32, i32 0
%s27 = alloca i32, i32 0
%s28 = alloca i32, i32 0
%s29 = alloca i32, i32 0
%s30 = alloca i32, i32 0
%s31 = alloca i32, i32 0
%s32 = alloca i32, i32 0
%s33 = alloca i32, i32 0
%s34 = alloca i32, i32 0
%s35 = alloca i32, i32 0
%s36 = alloca i32, i32 0
%s37 = alloca i32, i32 0
%s38 = alloca i32, i32 0
%s39 = alloca i32, i32 0
%s40 = alloca i32, i32 0
%s41 = alloca i32, i32 0
%s42 = alloca i32, i32 0
%s43 = alloca i32, i32 0
%s44 = alloca i32, i32 0
%s45 = alloca i32, i32 0
%s46 = alloca i32, i32 0
%s47 = alloca i32, i32 0
%s48 = alloca i32, i32 0
%s49 = alloca i32, i32 0
%t_9 = add i32 2, 0
store i32 %t_9, i32* %s0
br label %label_124
label_124:
%t_10 = load i32, i32* %s0
%t_11 = icmp slt i32 %t_10, 10
%t_12 = zext i1 %t_11 to i32
%t_13 = trunc i32 %t_12 to i1
br i1 %t_13, label %label_128, label %label_138
label_128:
%w2 = getelementptr [31 x i8], [31 x i8]* @.w2, i32 0, i32 0
call void @print(i8* %w2)
%t_14 = load i32, i32* %s0
ret i32 %t_14
%t_15 = load i32, i32* %s0
%t_16 = add i32 %t_15, 1

%t_17 = add i32 %t_16, 0
store i32 %t_17, i32* %s0
%w3 = getelementptr [26 x i8], [26 x i8]* @.w3, i32 0, i32 0
call void @print(i8* %w3)
br label %label_124
label_138:
ret i32 0
}

define void @returnFromSwitchInt() {
%s0 = alloca i32, i32 0
%s1 = alloca i32, i32 0
%s2 = alloca i32, i32 0
%s3 = alloca i32, i32 0
%s4 = alloca i32, i32 0
%s5 = alloca i32, i32 0
%s6 = alloca i32, i32 0
%s7 = alloca i32, i32 0
%s8 = alloca i32, i32 0
%s9 = alloca i32, i32 0
%s10 = alloca i32, i32 0
%s11 = alloca i32, i32 0
%s12 = alloca i32, i32 0
%s13 = alloca i32, i32 0
%s14 = alloca i32, i32 0
%s15 = alloca i32, i32 0
%s16 = alloca i32, i32 0
%s17 = alloca i32, i32 0
%s18 = alloca i32, i32 0
%s19 = alloca i32, i32 0
%s20 = alloca i32, i32 0
%s21 = alloca i32, i32 0
%s22 = alloca i32, i32 0
%s23 = alloca i32, i32 0
%s24 = alloca i32, i32 0
%s25 = alloca i32, i32 0
%s26 = alloca i32, i32 0
%s27 = alloca i32, i32 0
%s28 = alloca i32, i32 0
%s29 = alloca i32, i32 0
%s30 = alloca i32, i32 0
%s31 = alloca i32, i32 0
%s32 = alloca i32, i32 0
%s33 = alloca i32, i32 0
%s34 = alloca i32, i32 0
%s35 = alloca i32, i32 0
%s36 = alloca i32, i32 0
%s37 = alloca i32, i32 0
%s38 = alloca i32, i32 0
%s39 = alloca i32, i32 0
%s40 = alloca i32, i32 0
%s41 = alloca i32, i32 0
%s42 = alloca i32, i32 0
%s43 = alloca i32, i32 0
%s44 = alloca i32, i32 0
%s45 = alloca i32, i32 0
%s46 = alloca i32, i32 0
%s47 = alloca i32, i32 0
%s48 = alloca i32, i32 0
%s49 = alloca i32, i32 0
%w4 = getelementptr [32 x i8], [32 x i8]* @.w4, i32 0, i32 0
call void @print(i8* %w4)
%t_18 = add i32 5, 0
store i32 %t_18, i32* %s0
%t_19 = load i32, i32* %s0
%t_20 = icmp eq i32 %t_19, 2
%t_21 = zext i1 %t_20 to i32
%t_22 = icmp ne i32 0, %t_21
br i1 %t_22, label %label_199, label %label_203
label_199:
%w5 = getelementptr [8 x i8], [8 x i8]* @.w5, i32 0, i32 0
call void @print(i8* %w5)
br label %label_224
br label %label_203
label_203:
%t_23 = load i32, i32* %s0
%t_24 = icmp eq i32 %t_23, 5
%t_25 = zext i1 %t_24 to i32
%t_26 = icmp ne i32 0, %t_25
br i1 %t_26, label %label_208, label %label_212
label_208:
ret void
br label %label_222
br label %label_212
label_212:
%t_27 = load i32, i32* %s0
%t_28 = icmp eq i32 %t_27, 8
%t_29 = zext i1 %t_28 to i32
%t_30 = icmp ne i32 0, %t_29
br i1 %t_30, label %label_217, label %label_220
label_217:
%w6 = getelementptr [8 x i8], [8 x i8]* @.w6, i32 0, i32 0
call void @print(i8* %w6)
br label %label_220
label_220:
br label %label_222
label_222:
br label %label_224
label_224:
ret void
}

define i32 @returnFromSwitchInt2() {
%s0 = alloca i32, i32 0
%s1 = alloca i32, i32 0
%s2 = alloca i32, i32 0
%s3 = alloca i32, i32 0
%s4 = alloca i32, i32 0
%s5 = alloca i32, i32 0
%s6 = alloca i32, i32 0
%s7 = alloca i32, i32 0
%s8 = alloca i32, i32 0
%s9 = alloca i32, i32 0
%s10 = alloca i32, i32 0
%s11 = alloca i32, i32 0
%s12 = alloca i32, i32 0
%s13 = alloca i32, i32 0
%s14 = alloca i32, i32 0
%s15 = alloca i32, i32 0
%s16 = alloca i32, i32 0
%s17 = alloca i32, i32 0
%s18 = alloca i32, i32 0
%s19 = alloca i32, i32 0
%s20 = alloca i32, i32 0
%s21 = alloca i32, i32 0
%s22 = alloca i32, i32 0
%s23 = alloca i32, i32 0
%s24 = alloca i32, i32 0
%s25 = alloca i32, i32 0
%s26 = alloca i32, i32 0
%s27 = alloca i32, i32 0
%s28 = alloca i32, i32 0
%s29 = alloca i32, i32 0
%s30 = alloca i32, i32 0
%s31 = alloca i32, i32 0
%s32 = alloca i32, i32 0
%s33 = alloca i32, i32 0
%s34 = alloca i32, i32 0
%s35 = alloca i32, i32 0
%s36 = alloca i32, i32 0
%s37 = alloca i32, i32 0
%s38 = alloca i32, i32 0
%s39 = alloca i32, i32 0
%s40 = alloca i32, i32 0
%s41 = alloca i32, i32 0
%s42 = alloca i32, i32 0
%s43 = alloca i32, i32 0
%s44 = alloca i32, i32 0
%s45 = alloca i32, i32 0
%s46 = alloca i32, i32 0
%s47 = alloca i32, i32 0
%s48 = alloca i32, i32 0
%s49 = alloca i32, i32 0
%w7 = getelementptr [32 x i8], [32 x i8]* @.w7, i32 0, i32 0
call void @print(i8* %w7)
%t_31 = add i32 5, 0
store i32 %t_31, i32* %s0
%t_32 = load i32, i32* %s0
%t_33 = icmp eq i32 %t_32, 2
%t_34 = zext i1 %t_33 to i32
%t_35 = icmp ne i32 0, %t_34
br i1 %t_35, label %label_285, label %label_289
label_285:
%w8 = getelementptr [8 x i8], [8 x i8]* @.w8, i32 0, i32 0
call void @print(i8* %w8)
br label %label_310
br label %label_289
label_289:
%t_36 = load i32, i32* %s0
%t_37 = icmp eq i32 %t_36, 5
%t_38 = zext i1 %t_37 to i32
%t_39 = icmp ne i32 0, %t_38
br i1 %t_39, label %label_294, label %label_298
label_294:
ret i32 0
br label %label_308
br label %label_298
label_298:
%t_40 = load i32, i32* %s0
%t_41 = icmp eq i32 %t_40, 8
%t_42 = zext i1 %t_41 to i32
%t_43 = icmp ne i32 0, %t_42
br i1 %t_43, label %label_303, label %label_306
label_303:
%w9 = getelementptr [8 x i8], [8 x i8]* @.w9, i32 0, i32 0
call void @print(i8* %w9)
br label %label_306
label_306:
br label %label_308
label_308:
br label %label_310
label_310:
ret i32 0
ret i32 0
}

define void @returnFromSwitchByte() {
%s0 = alloca i32, i32 0
%s1 = alloca i32, i32 0
%s2 = alloca i32, i32 0
%s3 = alloca i32, i32 0
%s4 = alloca i32, i32 0
%s5 = alloca i32, i32 0
%s6 = alloca i32, i32 0
%s7 = alloca i32, i32 0
%s8 = alloca i32, i32 0
%s9 = alloca i32, i32 0
%s10 = alloca i32, i32 0
%s11 = alloca i32, i32 0
%s12 = alloca i32, i32 0
%s13 = alloca i32, i32 0
%s14 = alloca i32, i32 0
%s15 = alloca i32, i32 0
%s16 = alloca i32, i32 0
%s17 = alloca i32, i32 0
%s18 = alloca i32, i32 0
%s19 = alloca i32, i32 0
%s20 = alloca i32, i32 0
%s21 = alloca i32, i32 0
%s22 = alloca i32, i32 0
%s23 = alloca i32, i32 0
%s24 = alloca i32, i32 0
%s25 = alloca i32, i32 0
%s26 = alloca i32, i32 0
%s27 = alloca i32, i32 0
%s28 = alloca i32, i32 0
%s29 = alloca i32, i32 0
%s30 = alloca i32, i32 0
%s31 = alloca i32, i32 0
%s32 = alloca i32, i32 0
%s33 = alloca i32, i32 0
%s34 = alloca i32, i32 0
%s35 = alloca i32, i32 0
%s36 = alloca i32, i32 0
%s37 = alloca i32, i32 0
%s38 = alloca i32, i32 0
%s39 = alloca i32, i32 0
%s40 = alloca i32, i32 0
%s41 = alloca i32, i32 0
%s42 = alloca i32, i32 0
%s43 = alloca i32, i32 0
%s44 = alloca i32, i32 0
%s45 = alloca i32, i32 0
%s46 = alloca i32, i32 0
%s47 = alloca i32, i32 0
%s48 = alloca i32, i32 0
%s49 = alloca i32, i32 0
%w10 = getelementptr [32 x i8], [32 x i8]* @.w10, i32 0, i32 0
call void @print(i8* %w10)
%t_44 = trunc i32 4 to i8
%t_45 = zext i8 %t_44 to i32
store i32 %t_45, i32* %s0
%t_46 = load i32, i32* %s0
%t_47 = icmp eq i32 %t_46, 1
%t_48 = zext i1 %t_47 to i32
%t_49 = icmp ne i32 0, %t_48
br i1 %t_49, label %label_372, label %label_376
label_372:
%w11 = getelementptr [9 x i8], [9 x i8]* @.w11, i32 0, i32 0
call void @print(i8* %w11)
br label %label_397
br label %label_376
label_376:
%t_50 = load i32, i32* %s0
%t_51 = icmp eq i32 %t_50, 4
%t_52 = zext i1 %t_51 to i32
%t_53 = icmp ne i32 0, %t_52
br i1 %t_53, label %label_381, label %label_385
label_381:
ret void
br label %label_395
br label %label_385
label_385:
%t_54 = load i32, i32* %s0
%t_55 = icmp eq i32 %t_54, 7
%t_56 = zext i1 %t_55 to i32
%t_57 = icmp ne i32 0, %t_56
br i1 %t_57, label %label_390, label %label_393
label_390:
%w12 = getelementptr [9 x i8], [9 x i8]* @.w12, i32 0, i32 0
call void @print(i8* %w12)
br label %label_393
label_393:
br label %label_395
label_395:
br label %label_397
label_397:
ret void
}

define i32 @returnFromSwitchByte2() {
%s0 = alloca i32, i32 0
%s1 = alloca i32, i32 0
%s2 = alloca i32, i32 0
%s3 = alloca i32, i32 0
%s4 = alloca i32, i32 0
%s5 = alloca i32, i32 0
%s6 = alloca i32, i32 0
%s7 = alloca i32, i32 0
%s8 = alloca i32, i32 0
%s9 = alloca i32, i32 0
%s10 = alloca i32, i32 0
%s11 = alloca i32, i32 0
%s12 = alloca i32, i32 0
%s13 = alloca i32, i32 0
%s14 = alloca i32, i32 0
%s15 = alloca i32, i32 0
%s16 = alloca i32, i32 0
%s17 = alloca i32, i32 0
%s18 = alloca i32, i32 0
%s19 = alloca i32, i32 0
%s20 = alloca i32, i32 0
%s21 = alloca i32, i32 0
%s22 = alloca i32, i32 0
%s23 = alloca i32, i32 0
%s24 = alloca i32, i32 0
%s25 = alloca i32, i32 0
%s26 = alloca i32, i32 0
%s27 = alloca i32, i32 0
%s28 = alloca i32, i32 0
%s29 = alloca i32, i32 0
%s30 = alloca i32, i32 0
%s31 = alloca i32, i32 0
%s32 = alloca i32, i32 0
%s33 = alloca i32, i32 0
%s34 = alloca i32, i32 0
%s35 = alloca i32, i32 0
%s36 = alloca i32, i32 0
%s37 = alloca i32, i32 0
%s38 = alloca i32, i32 0
%s39 = alloca i32, i32 0
%s40 = alloca i32, i32 0
%s41 = alloca i32, i32 0
%s42 = alloca i32, i32 0
%s43 = alloca i32, i32 0
%s44 = alloca i32, i32 0
%s45 = alloca i32, i32 0
%s46 = alloca i32, i32 0
%s47 = alloca i32, i32 0
%s48 = alloca i32, i32 0
%s49 = alloca i32, i32 0
%w13 = getelementptr [32 x i8], [32 x i8]* @.w13, i32 0, i32 0
call void @print(i8* %w13)
%t_58 = trunc i32 4 to i8
%t_59 = zext i8 %t_58 to i32
store i32 %t_59, i32* %s0
%t_60 = load i32, i32* %s0
%t_61 = icmp eq i32 %t_60, 1
%t_62 = zext i1 %t_61 to i32
%t_63 = icmp ne i32 0, %t_62
br i1 %t_63, label %label_458, label %label_462
label_458:
%w14 = getelementptr [9 x i8], [9 x i8]* @.w14, i32 0, i32 0
call void @print(i8* %w14)
br label %label_483
br label %label_462
label_462:
%t_64 = load i32, i32* %s0
%t_65 = icmp eq i32 %t_64, 4
%t_66 = zext i1 %t_65 to i32
%t_67 = icmp ne i32 0, %t_66
br i1 %t_67, label %label_467, label %label_471
label_467:
ret i32 0
br label %label_481
br label %label_471
label_471:
%t_68 = load i32, i32* %s0
%t_69 = icmp eq i32 %t_68, 7
%t_70 = zext i1 %t_69 to i32
%t_71 = icmp ne i32 0, %t_70
br i1 %t_71, label %label_476, label %label_479
label_476:
%w15 = getelementptr [9 x i8], [9 x i8]* @.w15, i32 0, i32 0
call void @print(i8* %w15)
br label %label_479
label_479:
br label %label_481
label_481:
br label %label_483
label_483:
ret i32 0
ret i32 0
}

define i32 @returnFromSwitchBool() {
%s0 = alloca i32, i32 0
%s1 = alloca i32, i32 0
%s2 = alloca i32, i32 0
%s3 = alloca i32, i32 0
%s4 = alloca i32, i32 0
%s5 = alloca i32, i32 0
%s6 = alloca i32, i32 0
%s7 = alloca i32, i32 0
%s8 = alloca i32, i32 0
%s9 = alloca i32, i32 0
%s10 = alloca i32, i32 0
%s11 = alloca i32, i32 0
%s12 = alloca i32, i32 0
%s13 = alloca i32, i32 0
%s14 = alloca i32, i32 0
%s15 = alloca i32, i32 0
%s16 = alloca i32, i32 0
%s17 = alloca i32, i32 0
%s18 = alloca i32, i32 0
%s19 = alloca i32, i32 0
%s20 = alloca i32, i32 0
%s21 = alloca i32, i32 0
%s22 = alloca i32, i32 0
%s23 = alloca i32, i32 0
%s24 = alloca i32, i32 0
%s25 = alloca i32, i32 0
%s26 = alloca i32, i32 0
%s27 = alloca i32, i32 0
%s28 = alloca i32, i32 0
%s29 = alloca i32, i32 0
%s30 = alloca i32, i32 0
%s31 = alloca i32, i32 0
%s32 = alloca i32, i32 0
%s33 = alloca i32, i32 0
%s34 = alloca i32, i32 0
%s35 = alloca i32, i32 0
%s36 = alloca i32, i32 0
%s37 = alloca i32, i32 0
%s38 = alloca i32, i32 0
%s39 = alloca i32, i32 0
%s40 = alloca i32, i32 0
%s41 = alloca i32, i32 0
%s42 = alloca i32, i32 0
%s43 = alloca i32, i32 0
%s44 = alloca i32, i32 0
%s45 = alloca i32, i32 0
%s46 = alloca i32, i32 0
%s47 = alloca i32, i32 0
%s48 = alloca i32, i32 0
%s49 = alloca i32, i32 0
%w16 = getelementptr [32 x i8], [32 x i8]* @.w16, i32 0, i32 0
call void @print(i8* %w16)
%t_72 = trunc i32 6 to i8
%t_73 = zext i8 %t_72 to i32
store i32 %t_73, i32* %s0
%t_74 = load i32, i32* %s0
%t_75 = icmp eq i32 %t_74, 3
%t_76 = zext i1 %t_75 to i32
%t_77 = icmp ne i32 0, %t_76
br i1 %t_77, label %label_545, label %label_549
label_545:
%w17 = getelementptr [9 x i8], [9 x i8]* @.w17, i32 0, i32 0
call void @print(i8* %w17)
br label %label_570
br label %label_549
label_549:
%t_78 = load i32, i32* %s0
%t_79 = icmp eq i32 %t_78, 6
%t_80 = zext i1 %t_79 to i32
%t_81 = icmp ne i32 0, %t_80
br i1 %t_81, label %label_554, label %label_558
label_554:
ret i32 1
br label %label_568
br label %label_558
label_558:
%t_82 = load i32, i32* %s0
%t_83 = icmp eq i32 %t_82, 9
%t_84 = zext i1 %t_83 to i32
%t_85 = icmp ne i32 0, %t_84
br i1 %t_85, label %label_563, label %label_566
label_563:
%w18 = getelementptr [9 x i8], [9 x i8]* @.w18, i32 0, i32 0
call void @print(i8* %w18)
br label %label_566
label_566:
br label %label_568
label_568:
br label %label_570
label_570:
ret i32 0
ret i32 0
}

define void @main() {
%s0 = alloca i32, i32 0
%s1 = alloca i32, i32 0
%s2 = alloca i32, i32 0
%s3 = alloca i32, i32 0
%s4 = alloca i32, i32 0
%s5 = alloca i32, i32 0
%s6 = alloca i32, i32 0
%s7 = alloca i32, i32 0
%s8 = alloca i32, i32 0
%s9 = alloca i32, i32 0
%s10 = alloca i32, i32 0
%s11 = alloca i32, i32 0
%s12 = alloca i32, i32 0
%s13 = alloca i32, i32 0
%s14 = alloca i32, i32 0
%s15 = alloca i32, i32 0
%s16 = alloca i32, i32 0
%s17 = alloca i32, i32 0
%s18 = alloca i32, i32 0
%s19 = alloca i32, i32 0
%s20 = alloca i32, i32 0
%s21 = alloca i32, i32 0
%s22 = alloca i32, i32 0
%s23 = alloca i32, i32 0
%s24 = alloca i32, i32 0
%s25 = alloca i32, i32 0
%s26 = alloca i32, i32 0
%s27 = alloca i32, i32 0
%s28 = alloca i32, i32 0
%s29 = alloca i32, i32 0
%s30 = alloca i32, i32 0
%s31 = alloca i32, i32 0
%s32 = alloca i32, i32 0
%s33 = alloca i32, i32 0
%s34 = alloca i32, i32 0
%s35 = alloca i32, i32 0
%s36 = alloca i32, i32 0
%s37 = alloca i32, i32 0
%s38 = alloca i32, i32 0
%s39 = alloca i32, i32 0
%s40 = alloca i32, i32 0
%s41 = alloca i32, i32 0
%s42 = alloca i32, i32 0
%s43 = alloca i32, i32 0
%s44 = alloca i32, i32 0
%s45 = alloca i32, i32 0
%s46 = alloca i32, i32 0
%s47 = alloca i32, i32 0
%s48 = alloca i32, i32 0
%s49 = alloca i32, i32 0
call void @returnFromWhile()
%t_86 = call i32 @returnFromWhile2()
%t_87 = add i32 %t_86, 0
store i32 %t_87, i32* %s0
call void @returnFromSwitchInt()
%t_88 = call i32 @returnFromSwitchInt2()
%t_89 = add i32 %t_88, 0
store i32 %t_89, i32* %s1
call void @returnFromSwitchByte()
%t_90 = call i32 @returnFromSwitchByte2()
%t_91 = trunc i32 %t_90 to i8
%t_92 = zext i8 %t_91 to i32
store i32 %t_92, i32* %s2
%t_93 = call i32 @returnFromSwitchBool()
%t_94 = icmp ne i32 0, %t_93
br i1 %t_94, label %label_640, label %label_643
label_640:
%w19 = getelementptr [8 x i8], [8 x i8]* @.w19, i32 0, i32 0
call void @print(i8* %w19)
br label %label_643
label_643:
ret void
}

